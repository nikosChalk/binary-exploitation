# A simple typo/coding mistake in the crypto implementation
# i.e. `self.step` and `self.stup`
#

from pwn import *
import requests
import json

BLOCK_SIZE = 16
png_intro = bytes([
    # https://en.wikipedia.org/wiki/Portable_Network_Graphics#File_format
    # Magic Number
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,

    # Now comes the IHDR chunks, which is always the first chunk
    # Chunk length. Always 13 = 0xd Bytes for the IHDR chunk.
    0x00, 0x00, 0x00, 0x0d, 
    # "IHDR" ascii
    0x49, 0x48, 0x44, 0x52
])
assert(len(png_intro) == BLOCK_SIZE)

# Get encrypted content
r = requests.get('http://aes.cryptohack.org/bean_counter/encrypt/')

data = r.content.decode('ascii').strip()
data = json.loads(data)
encrypted = bytes.fromhex(data['encrypted'])
assert(encrypted)

# Calculate the blocks
blocks = int(len(encrypted)/BLOCK_SIZE)
if blocks % BLOCK_SIZE != 0:
    blocks += 1

keystream = xor(png_intro, encrypted[:BLOCK_SIZE]) # Retrieve the key
decrypted = xor(encrypted, keystream)   # decrypt the data by applying the inverse operation
with open('bean_flag.png', 'bw') as f:
    f.write(decrypted)

# Flag is: crypto{hex_bytes_beans}
