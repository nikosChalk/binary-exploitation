# Generated with: objdump -d --disassembler-option=intel-mnemonic --syms stack5 

stack5:     file format elf32-i386

SYMBOL TABLE:
08048114 l    d  .interp	00000000              .interp
08048128 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048148 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
0804816c l    d  .hash	00000000              .hash
08048194 l    d  .gnu.hash	00000000              .gnu.hash
080481b4 l    d  .dynsym	00000000              .dynsym
08048204 l    d  .dynstr	00000000              .dynstr
0804824e l    d  .gnu.version	00000000              .gnu.version
08048258 l    d  .gnu.version_r	00000000              .gnu.version_r
08048278 l    d  .rel.dyn	00000000              .rel.dyn
08048280 l    d  .rel.plt	00000000              .rel.plt
08048298 l    d  .init	00000000              .init
080482c8 l    d  .plt	00000000              .plt
08048310 l    d  .text	00000000              .text
0804847c l    d  .fini	00000000              .fini
08048498 l    d  .rodata	00000000              .rodata
080484a0 l    d  .eh_frame	00000000              .eh_frame
080494a4 l    d  .ctors	00000000              .ctors
080494ac l    d  .dtors	00000000              .dtors
080494b4 l    d  .jcr	00000000              .jcr
080494b8 l    d  .dynamic	00000000              .dynamic
08049588 l    d  .got	00000000              .got
0804958c l    d  .got.plt	00000000              .got.plt
080495a4 l    d  .data	00000000              .data
080495ac l    d  .bss	00000000              .bss
00000000 l    d  .stab	00000000              .stab
00000000 l    d  .stabstr	00000000              .stabstr
00000000 l    d  .comment	00000000              .comment
00000000 l    df *ABS*	00000000              crtstuff.c
080494a4 l     O .ctors	00000000              __CTOR_LIST__
080494ac l     O .dtors	00000000              __DTOR_LIST__
080494b4 l     O .jcr	00000000              __JCR_LIST__
08048340 l     F .text	00000000              __do_global_dtors_aux
080495ac l     O .bss	00000001              completed.5982
080495b0 l     O .bss	00000004              dtor_idx.5984
080483a0 l     F .text	00000000              frame_dummy
00000000 l    df *ABS*	00000000              crtstuff.c
080494a8 l     O .ctors	00000000              __CTOR_END__
080484a0 l     O .eh_frame	00000000              __FRAME_END__
080494b4 l     O .jcr	00000000              __JCR_END__
08048450 l     F .text	00000000              __do_global_ctors_aux
00000000 l    df *ABS*	00000000              stack5.c
0804958c l     O .got.plt	00000000              .hidden _GLOBAL_OFFSET_TABLE_
080494a4 l       .ctors	00000000              .hidden __init_array_end
080494a4 l       .ctors	00000000              .hidden __init_array_start
080494b8 l     O .dynamic	00000000              .hidden _DYNAMIC
080495a4  w      .data	00000000              data_start
080483e0 g     F .text	00000005              __libc_csu_fini
08048310 g     F .text	00000000              _start
00000000  w      *UND*	00000000              __gmon_start__
00000000  w      *UND*	00000000              _Jv_RegisterClasses
08048498 g     O .rodata	00000004              _fp_hw
0804847c g     F .fini	00000000              _fini
00000000       F *UND*	00000000              gets@@GLIBC_2.0
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
0804849c g     O .rodata	00000004              _IO_stdin_used
080495a4 g       .data	00000000              __data_start
080495a8 g     O .data	00000000              .hidden __dso_handle
080494b0 g     O .dtors	00000000              .hidden __DTOR_END__
080483f0 g     F .text	0000005a              __libc_csu_init
080495ac g       *ABS*	00000000              __bss_start
080495b4 g       *ABS*	00000000              _end
080495ac g       *ABS*	00000000              _edata
0804844a g     F .text	00000000              .hidden __i686.get_pc_thunk.bx
080483c4 g     F .text	00000017              main
08048298 g     F .init	00000000              _init



Disassembly of section .init:

08048298 <_init>:
 8048298:	55                   	push   ebp
 8048299:	89 e5                	mov    ebp,esp
 804829b:	53                   	push   ebx
 804829c:	83 ec 04             	sub    esp,0x4
 804829f:	e8 00 00 00 00       	call   80482a4 <_init+0xc>
 80482a4:	5b                   	pop    ebx
 80482a5:	81 c3 e8 12 00 00    	add    ebx,0x12e8
 80482ab:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 80482b1:	85 d2                	test   edx,edx
 80482b3:	74 05                	je     80482ba <_init+0x22>
 80482b5:	e8 1e 00 00 00       	call   80482d8 <__gmon_start__@plt>
 80482ba:	e8 e1 00 00 00       	call   80483a0 <frame_dummy>
 80482bf:	e8 8c 01 00 00       	call   8048450 <__do_global_ctors_aux>
 80482c4:	58                   	pop    eax
 80482c5:	5b                   	pop    ebx
 80482c6:	c9                   	leave  
 80482c7:	c3                   	ret    

Disassembly of section .plt:

080482c8 <__gmon_start__@plt-0x10>:
 80482c8:	ff 35 90 95 04 08    	push   DWORD PTR ds:0x8049590
 80482ce:	ff 25 94 95 04 08    	jmp    DWORD PTR ds:0x8049594
 80482d4:	00 00                	add    BYTE PTR [eax],al
	...

080482d8 <__gmon_start__@plt>:
 80482d8:	ff 25 98 95 04 08    	jmp    DWORD PTR ds:0x8049598
 80482de:	68 00 00 00 00       	push   0x0
 80482e3:	e9 e0 ff ff ff       	jmp    80482c8 <_init+0x30>

080482e8 <gets@plt>:
 80482e8:	ff 25 9c 95 04 08    	jmp    DWORD PTR ds:0x804959c
 80482ee:	68 08 00 00 00       	push   0x8
 80482f3:	e9 d0 ff ff ff       	jmp    80482c8 <_init+0x30>

080482f8 <__libc_start_main@plt>:
 80482f8:	ff 25 a0 95 04 08    	jmp    DWORD PTR ds:0x80495a0
 80482fe:	68 10 00 00 00       	push   0x10
 8048303:	e9 c0 ff ff ff       	jmp    80482c8 <_init+0x30>

Disassembly of section .text:

08048310 <_start>:
 8048310:	31 ed                	xor    ebp,ebp
 8048312:	5e                   	pop    esi
 8048313:	89 e1                	mov    ecx,esp
 8048315:	83 e4 f0             	and    esp,0xfffffff0
 8048318:	50                   	push   eax
 8048319:	54                   	push   esp
 804831a:	52                   	push   edx
 804831b:	68 e0 83 04 08       	push   0x80483e0
 8048320:	68 f0 83 04 08       	push   0x80483f0
 8048325:	51                   	push   ecx
 8048326:	56                   	push   esi
 8048327:	68 c4 83 04 08       	push   0x80483c4
 804832c:	e8 c7 ff ff ff       	call   80482f8 <__libc_start_main@plt>
 8048331:	f4                   	hlt    
 8048332:	90                   	nop
 8048333:	90                   	nop
 8048334:	90                   	nop
 8048335:	90                   	nop
 8048336:	90                   	nop
 8048337:	90                   	nop
 8048338:	90                   	nop
 8048339:	90                   	nop
 804833a:	90                   	nop
 804833b:	90                   	nop
 804833c:	90                   	nop
 804833d:	90                   	nop
 804833e:	90                   	nop
 804833f:	90                   	nop

08048340 <__do_global_dtors_aux>:
 8048340:	55                   	push   ebp
 8048341:	89 e5                	mov    ebp,esp
 8048343:	53                   	push   ebx
 8048344:	83 ec 04             	sub    esp,0x4
 8048347:	80 3d ac 95 04 08 00 	cmp    BYTE PTR ds:0x80495ac,0x0
 804834e:	75 3f                	jne    804838f <__do_global_dtors_aux+0x4f>
 8048350:	a1 b0 95 04 08       	mov    eax,ds:0x80495b0
 8048355:	bb b0 94 04 08       	mov    ebx,0x80494b0
 804835a:	81 eb ac 94 04 08    	sub    ebx,0x80494ac
 8048360:	c1 fb 02             	sar    ebx,0x2
 8048363:	83 eb 01             	sub    ebx,0x1
 8048366:	39 d8                	cmp    eax,ebx
 8048368:	73 1e                	jae    8048388 <__do_global_dtors_aux+0x48>
 804836a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048370:	83 c0 01             	add    eax,0x1
 8048373:	a3 b0 95 04 08       	mov    ds:0x80495b0,eax
 8048378:	ff 14 85 ac 94 04 08 	call   DWORD PTR [eax*4+0x80494ac]
 804837f:	a1 b0 95 04 08       	mov    eax,ds:0x80495b0
 8048384:	39 d8                	cmp    eax,ebx
 8048386:	72 e8                	jb     8048370 <__do_global_dtors_aux+0x30>
 8048388:	c6 05 ac 95 04 08 01 	mov    BYTE PTR ds:0x80495ac,0x1
 804838f:	83 c4 04             	add    esp,0x4
 8048392:	5b                   	pop    ebx
 8048393:	5d                   	pop    ebp
 8048394:	c3                   	ret    
 8048395:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048399:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483a0 <frame_dummy>:
 80483a0:	55                   	push   ebp
 80483a1:	89 e5                	mov    ebp,esp
 80483a3:	83 ec 18             	sub    esp,0x18
 80483a6:	a1 b4 94 04 08       	mov    eax,ds:0x80494b4
 80483ab:	85 c0                	test   eax,eax
 80483ad:	74 12                	je     80483c1 <frame_dummy+0x21>
 80483af:	b8 00 00 00 00       	mov    eax,0x0
 80483b4:	85 c0                	test   eax,eax
 80483b6:	74 09                	je     80483c1 <frame_dummy+0x21>
 80483b8:	c7 04 24 b4 94 04 08 	mov    DWORD PTR [esp],0x80494b4
 80483bf:	ff d0                	call   eax
 80483c1:	c9                   	leave  
 80483c2:	c3                   	ret    
 80483c3:	90                   	nop

080483c4 <main>:
 80483c4:	55                   	push   ebp
 80483c5:	89 e5                	mov    ebp,esp
 80483c7:	83 e4 f0             	and    esp,0xfffffff0
 80483ca:	83 ec 50             	sub    esp,0x50
 80483cd:	8d 44 24 10          	lea    eax,[esp+0x10]
 80483d1:	89 04 24             	mov    DWORD PTR [esp],eax
 80483d4:	e8 0f ff ff ff       	call   80482e8 <gets@plt>
 80483d9:	c9                   	leave  
 80483da:	c3                   	ret    
 80483db:	90                   	nop
 80483dc:	90                   	nop
 80483dd:	90                   	nop
 80483de:	90                   	nop
 80483df:	90                   	nop

080483e0 <__libc_csu_fini>:
 80483e0:	55                   	push   ebp
 80483e1:	89 e5                	mov    ebp,esp
 80483e3:	5d                   	pop    ebp
 80483e4:	c3                   	ret    
 80483e5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80483e9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483f0 <__libc_csu_init>:
 80483f0:	55                   	push   ebp
 80483f1:	89 e5                	mov    ebp,esp
 80483f3:	57                   	push   edi
 80483f4:	56                   	push   esi
 80483f5:	53                   	push   ebx
 80483f6:	e8 4f 00 00 00       	call   804844a <__i686.get_pc_thunk.bx>
 80483fb:	81 c3 91 11 00 00    	add    ebx,0x1191
 8048401:	83 ec 1c             	sub    esp,0x1c
 8048404:	e8 8f fe ff ff       	call   8048298 <_init>
 8048409:	8d bb 18 ff ff ff    	lea    edi,[ebx-0xe8]
 804840f:	8d 83 18 ff ff ff    	lea    eax,[ebx-0xe8]
 8048415:	29 c7                	sub    edi,eax
 8048417:	c1 ff 02             	sar    edi,0x2
 804841a:	85 ff                	test   edi,edi
 804841c:	74 24                	je     8048442 <__libc_csu_init+0x52>
 804841e:	31 f6                	xor    esi,esi
 8048420:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 8048423:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048427:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804842a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804842e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048431:	89 04 24             	mov    DWORD PTR [esp],eax
 8048434:	ff 94 b3 18 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe8]
 804843b:	83 c6 01             	add    esi,0x1
 804843e:	39 fe                	cmp    esi,edi
 8048440:	72 de                	jb     8048420 <__libc_csu_init+0x30>
 8048442:	83 c4 1c             	add    esp,0x1c
 8048445:	5b                   	pop    ebx
 8048446:	5e                   	pop    esi
 8048447:	5f                   	pop    edi
 8048448:	5d                   	pop    ebp
 8048449:	c3                   	ret    

0804844a <__i686.get_pc_thunk.bx>:
 804844a:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 804844d:	c3                   	ret    
 804844e:	90                   	nop
 804844f:	90                   	nop

08048450 <__do_global_ctors_aux>:
 8048450:	55                   	push   ebp
 8048451:	89 e5                	mov    ebp,esp
 8048453:	53                   	push   ebx
 8048454:	83 ec 04             	sub    esp,0x4
 8048457:	a1 a4 94 04 08       	mov    eax,ds:0x80494a4
 804845c:	83 f8 ff             	cmp    eax,0xffffffff
 804845f:	74 13                	je     8048474 <__do_global_ctors_aux+0x24>
 8048461:	bb a4 94 04 08       	mov    ebx,0x80494a4
 8048466:	66 90                	xchg   ax,ax
 8048468:	83 eb 04             	sub    ebx,0x4
 804846b:	ff d0                	call   eax
 804846d:	8b 03                	mov    eax,DWORD PTR [ebx]
 804846f:	83 f8 ff             	cmp    eax,0xffffffff
 8048472:	75 f4                	jne    8048468 <__do_global_ctors_aux+0x18>
 8048474:	83 c4 04             	add    esp,0x4
 8048477:	5b                   	pop    ebx
 8048478:	5d                   	pop    ebp
 8048479:	c3                   	ret    
 804847a:	90                   	nop
 804847b:	90                   	nop

Disassembly of section .fini:

0804847c <_fini>:
 804847c:	55                   	push   ebp
 804847d:	89 e5                	mov    ebp,esp
 804847f:	53                   	push   ebx
 8048480:	83 ec 04             	sub    esp,0x4
 8048483:	e8 00 00 00 00       	call   8048488 <_fini+0xc>
 8048488:	5b                   	pop    ebx
 8048489:	81 c3 04 11 00 00    	add    ebx,0x1104
 804848f:	e8 ac fe ff ff       	call   8048340 <__do_global_dtors_aux>
 8048494:	59                   	pop    ecx
 8048495:	5b                   	pop    ebx
 8048496:	c9                   	leave  
 8048497:	c3                   	ret 