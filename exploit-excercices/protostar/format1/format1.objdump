# objdump --disassembler-options=intel-mnemonic -t -d format1

format1:     file format elf32-i386

SYMBOL TABLE:
08048114 l    d  .interp        00000000              .interp
08048128 l    d  .note.ABI-tag  00000000              .note.ABI-tag
08048148 l    d  .note.gnu.build-id     00000000              .note.gnu.build-id
0804816c l    d  .hash  00000000              .hash
08048198 l    d  .gnu.hash      00000000              .gnu.hash
080481b8 l    d  .dynsym        00000000              .dynsym
08048218 l    d  .dynstr        00000000              .dynstr
0804826a l    d  .gnu.version   00000000              .gnu.version
08048278 l    d  .gnu.version_r 00000000              .gnu.version_r
08048298 l    d  .rel.dyn       00000000              .rel.dyn
080482a0 l    d  .rel.plt       00000000              .rel.plt
080482c0 l    d  .init  00000000              .init
080482f0 l    d  .plt   00000000              .plt
08048340 l    d  .text  00000000              .text
080484dc l    d  .fini  00000000              .fini
080484f8 l    d  .rodata        00000000              .rodata
08048520 l    d  .eh_frame      00000000              .eh_frame
08049524 l    d  .ctors 00000000              .ctors
0804952c l    d  .dtors 00000000              .dtors
08049534 l    d  .jcr   00000000              .jcr
08049538 l    d  .dynamic       00000000              .dynamic
08049608 l    d  .got   00000000              .got
0804960c l    d  .got.plt       00000000              .got.plt
08049628 l    d  .data  00000000              .data
08049630 l    d  .bss   00000000              .bss
00000000 l    d  .stab  00000000              .stab
00000000 l    d  .stabstr       00000000              .stabstr
00000000 l    d  .comment       00000000              .comment
00000000 l    df *ABS*  00000000              crtstuff.c
08049524 l     O .ctors 00000000              __CTOR_LIST__
0804952c l     O .dtors 00000000              __DTOR_LIST__
08049534 l     O .jcr   00000000              __JCR_LIST__
08048370 l     F .text  00000000              __do_global_dtors_aux
08049630 l     O .bss   00000001              completed.5982
08049634 l     O .bss   00000004              dtor_idx.5984
080483d0 l     F .text  00000000              frame_dummy
00000000 l    df *ABS*  00000000              crtstuff.c
08049528 l     O .ctors 00000000              __CTOR_END__
08048520 l     O .eh_frame      00000000              __FRAME_END__
08049534 l     O .jcr   00000000              __JCR_END__
080484b0 l     F .text  00000000              __do_global_ctors_aux
00000000 l    df *ABS*  00000000              format1.c
0804960c l     O .got.plt       00000000              .hidden _GLOBAL_OFFSET_TABLE_
08049524 l       .ctors 00000000              .hidden __init_array_end
08049524 l       .ctors 00000000              .hidden __init_array_start
08049538 l     O .dynamic       00000000              .hidden _DYNAMIC
08049628  w      .data  00000000              data_start
08048440 g     F .text  00000005              __libc_csu_fini
08048340 g     F .text  00000000              _start
00000000  w      *UND*  00000000              __gmon_start__
00000000  w      *UND*  00000000              _Jv_RegisterClasses
080484f8 g     O .rodata        00000004              _fp_hw
080484dc g     F .fini  00000000              _fini
00000000       F *UND*  00000000              __libc_start_main@@GLIBC_2.0
080484fc g     O .rodata        00000004              _IO_stdin_used
08049628 g       .data  00000000              __data_start
0804962c g     O .data  00000000              .hidden __dso_handle
08049530 g     O .dtors 00000000              .hidden __DTOR_END__
08048450 g     F .text  0000005a              __libc_csu_init
00000000       F *UND*  00000000              printf@@GLIBC_2.0
08049630 g       *ABS*  00000000              __bss_start
080483f4 g     F .text  00000028              vuln
08049638 g     O .bss   00000004              target
0804963c g       *ABS*  00000000              _end
00000000       F *UND*  00000000              puts@@GLIBC_2.0
08049630 g       *ABS*  00000000              _edata
080484aa g     F .text  00000000              .hidden __i686.get_pc_thunk.bx
0804841c g     F .text  0000001b              main
080482c0 g     F .init  00000000              _init



Disassembly of section .init:

080482c0 <_init>:
 80482c0:       55                      push   ebp
 80482c1:       89 e5                   mov    ebp,esp
 80482c3:       53                      push   ebx
 80482c4:       83 ec 04                sub    esp,0x4
 80482c7:       e8 00 00 00 00          call   80482cc <_init+0xc>
 80482cc:       5b                      pop    ebx
 80482cd:       81 c3 40 13 00 00       add    ebx,0x1340
 80482d3:       8b 93 fc ff ff ff       mov    edx,DWORD PTR [ebx-0x4]
 80482d9:       85 d2                   test   edx,edx
 80482db:       74 05                   je     80482e2 <_init+0x22>
 80482dd:       e8 1e 00 00 00          call   8048300 <__gmon_start__@plt>
 80482e2:       e8 e9 00 00 00          call   80483d0 <frame_dummy>
 80482e7:       e8 c4 01 00 00          call   80484b0 <__do_global_ctors_aux>
 80482ec:       58                      pop    eax
 80482ed:       5b                      pop    ebx
 80482ee:       c9                      leave
 80482ef:       c3                      ret

Disassembly of section .plt:

080482f0 <__gmon_start__@plt-0x10>:
 80482f0:       ff 35 10 96 04 08       push   DWORD PTR ds:0x8049610
 80482f6:       ff 25 14 96 04 08       jmp    DWORD PTR ds:0x8049614
 80482fc:       00 00                   add    BYTE PTR [eax],al
        ...

08048300 <__gmon_start__@plt>:
 8048300:       ff 25 18 96 04 08       jmp    DWORD PTR ds:0x8049618
 8048306:       68 00 00 00 00          push   0x0
 804830b:       e9 e0 ff ff ff          jmp    80482f0 <_init+0x30>

08048310 <__libc_start_main@plt>:
 8048310:       ff 25 1c 96 04 08       jmp    DWORD PTR ds:0x804961c
 8048316:       68 08 00 00 00          push   0x8
 804831b:       e9 d0 ff ff ff          jmp    80482f0 <_init+0x30>

08048320 <printf@plt>:
 8048320:       ff 25 20 96 04 08       jmp    DWORD PTR ds:0x8049620
 8048326:       68 10 00 00 00          push   0x10
 804832b:       e9 c0 ff ff ff          jmp    80482f0 <_init+0x30>

08048330 <puts@plt>:
 8048330:       ff 25 24 96 04 08       jmp    DWORD PTR ds:0x8049624
 8048336:       68 18 00 00 00          push   0x18
 804833b:       e9 b0 ff ff ff          jmp    80482f0 <_init+0x30>

Disassembly of section .text:

08048340 <_start>:
 8048340:       31 ed                   xor    ebp,ebp
 8048342:       5e                      pop    esi
 8048343:       89 e1                   mov    ecx,esp
 8048345:       83 e4 f0                and    esp,0xfffffff0
 8048348:       50                      push   eax
 8048349:       54                      push   esp
 804834a:       52                      push   edx
 804834b:       68 40 84 04 08          push   0x8048440
 8048350:       68 50 84 04 08          push   0x8048450
 8048355:       51                      push   ecx
 8048356:       56                      push   esi
 8048357:       68 1c 84 04 08          push   0x804841c
 804835c:       e8 af ff ff ff          call   8048310 <__libc_start_main@plt>
 8048361:       f4                      hlt
 8048362:       90                      nop
 8048363:       90                      nop
 8048364:       90                      nop
 8048365:       90                      nop
 8048366:       90                      nop
 8048367:       90                      nop
 8048368:       90                      nop
 8048369:       90                      nop
 804836a:       90                      nop
 804836b:       90                      nop
 804836c:       90                      nop
 804836d:       90                      nop
 804836e:       90                      nop
 804836f:       90                      nop

08048370 <__do_global_dtors_aux>:
 8048370:       55                      push   ebp
 8048371:       89 e5                   mov    ebp,esp
 8048373:       53                      push   ebx
 8048374:       83 ec 04                sub    esp,0x4
 8048377:       80 3d 30 96 04 08 00    cmp    BYTE PTR ds:0x8049630,0x0
 804837e:       75 3f                   jne    80483bf <__do_global_dtors_aux+0x4f>
 8048380:       a1 34 96 04 08          mov    eax,ds:0x8049634
 8048385:       bb 30 95 04 08          mov    ebx,0x8049530
 804838a:       81 eb 2c 95 04 08       sub    ebx,0x804952c
 8048390:       c1 fb 02                sar    ebx,0x2
 8048393:       83 eb 01                sub    ebx,0x1
 8048396:       39 d8                   cmp    eax,ebx
 8048398:       73 1e                   jae    80483b8 <__do_global_dtors_aux+0x48>
 804839a:       8d b6 00 00 00 00       lea    esi,[esi+0x0]
 80483a0:       83 c0 01                add    eax,0x1
 80483a3:       a3 34 96 04 08          mov    ds:0x8049634,eax
 80483a8:       ff 14 85 2c 95 04 08    call   DWORD PTR [eax*4+0x804952c]
 80483af:       a1 34 96 04 08          mov    eax,ds:0x8049634
 80483b4:       39 d8                   cmp    eax,ebx
 80483b6:       72 e8                   jb     80483a0 <__do_global_dtors_aux+0x30>
 80483b8:       c6 05 30 96 04 08 01    mov    BYTE PTR ds:0x8049630,0x1
 80483bf:       83 c4 04                add    esp,0x4
 80483c2:       5b                      pop    ebx
 80483c3:       5d                      pop    ebp
 80483c4:       c3                      ret
 80483c5:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 80483c9:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

080483d0 <frame_dummy>:
 80483d0:       55                      push   ebp
 80483d1:       89 e5                   mov    ebp,esp
 80483d3:       83 ec 18                sub    esp,0x18
 80483d6:       a1 34 95 04 08          mov    eax,ds:0x8049534
 80483db:       85 c0                   test   eax,eax
 80483dd:       74 12                   je     80483f1 <frame_dummy+0x21>
 80483df:       b8 00 00 00 00          mov    eax,0x0
 80483e4:       85 c0                   test   eax,eax
 80483e6:       74 09                   je     80483f1 <frame_dummy+0x21>
 80483e8:       c7 04 24 34 95 04 08    mov    DWORD PTR [esp],0x8049534
 80483ef:       ff d0                   call   eax
 80483f1:       c9                      leave
 80483f2:       c3                      ret
 80483f3:       90                      nop

080483f4 <vuln>:
 80483f4:       55                      push   ebp
 80483f5:       89 e5                   mov    ebp,esp
 80483f7:       83 ec 18                sub    esp,0x18
 80483fa:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 80483fd:       89 04 24                mov    DWORD PTR [esp],eax
 8048400:       e8 1b ff ff ff          call   8048320 <printf@plt>
 8048405:       a1 38 96 04 08          mov    eax,ds:0x8049638
 804840a:       85 c0                   test   eax,eax
 804840c:       74 0c                   je     804841a <vuln+0x26>
 804840e:       c7 04 24 00 85 04 08    mov    DWORD PTR [esp],0x8048500
 8048415:       e8 16 ff ff ff          call   8048330 <puts@plt>
 804841a:       c9                      leave
 804841b:       c3                      ret

0804841c <main>:
 804841c:       55                      push   ebp
 804841d:       89 e5                   mov    ebp,esp
 804841f:       83 e4 f0                and    esp,0xfffffff0
 8048422:       83 ec 10                sub    esp,0x10
 8048425:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 8048428:       83 c0 04                add    eax,0x4
 804842b:       8b 00                   mov    eax,DWORD PTR [eax]
 804842d:       89 04 24                mov    DWORD PTR [esp],eax
 8048430:       e8 bf ff ff ff          call   80483f4 <vuln>
 8048435:       c9                      leave
 8048436:       c3                      ret
 8048437:       90                      nop
 8048438:       90                      nop
 8048439:       90                      nop
 804843a:       90                      nop
 804843b:       90                      nop
 804843c:       90                      nop
 804843d:       90                      nop
 804843e:       90                      nop
 804843f:       90                      nop

08048440 <__libc_csu_fini>:
 8048440:       55                      push   ebp
 8048441:       89 e5                   mov    ebp,esp
 8048443:       5d                      pop    ebp
 8048444:       c3                      ret
 8048445:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 8048449:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

08048450 <__libc_csu_init>:
 8048450:       55                      push   ebp
 8048451:       89 e5                   mov    ebp,esp
 8048453:       57                      push   edi
 8048454:       56                      push   esi
 8048455:       53                      push   ebx
 8048456:       e8 4f 00 00 00          call   80484aa <__i686.get_pc_thunk.bx>
 804845b:       81 c3 b1 11 00 00       add    ebx,0x11b1
 8048461:       83 ec 1c                sub    esp,0x1c
 8048464:       e8 57 fe ff ff          call   80482c0 <_init>
 8048469:       8d bb 18 ff ff ff       lea    edi,[ebx-0xe8]
 804846f:       8d 83 18 ff ff ff       lea    eax,[ebx-0xe8]
 8048475:       29 c7                   sub    edi,eax
 8048477:       c1 ff 02                sar    edi,0x2
 804847a:       85 ff                   test   edi,edi
 804847c:       74 24                   je     80484a2 <__libc_csu_init+0x52>
 804847e:       31 f6                   xor    esi,esi
 8048480:       8b 45 10                mov    eax,DWORD PTR [ebp+0x10]
 8048483:       89 44 24 08             mov    DWORD PTR [esp+0x8],eax
 8048487:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 804848a:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 804848e:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 8048491:       89 04 24                mov    DWORD PTR [esp],eax
 8048494:       ff 94 b3 18 ff ff ff    call   DWORD PTR [ebx+esi*4-0xe8]
 804849b:       83 c6 01                add    esi,0x1
 804849e:       39 fe                   cmp    esi,edi
 80484a0:       72 de                   jb     8048480 <__libc_csu_init+0x30>
 80484a2:       83 c4 1c                add    esp,0x1c
 80484a5:       5b                      pop    ebx
 80484a6:       5e                      pop    esi
 80484a7:       5f                      pop    edi
 80484a8:       5d                      pop    ebp
 80484a9:       c3                      ret

080484aa <__i686.get_pc_thunk.bx>:
 80484aa:       8b 1c 24                mov    ebx,DWORD PTR [esp]
 80484ad:       c3                      ret
 80484ae:       90                      nop
 80484af:       90                      nop

080484b0 <__do_global_ctors_aux>:
 80484b0:       55                      push   ebp
 80484b1:       89 e5                   mov    ebp,esp
 80484b3:       53                      push   ebx
 80484b4:       83 ec 04                sub    esp,0x4
 80484b7:       a1 24 95 04 08          mov    eax,ds:0x8049524
 80484bc:       83 f8 ff                cmp    eax,0xffffffff
 80484bf:       74 13                   je     80484d4 <__do_global_ctors_aux+0x24>
 80484c1:       bb 24 95 04 08          mov    ebx,0x8049524
 80484c6:       66 90                   xchg   ax,ax
 80484c8:       83 eb 04                sub    ebx,0x4
 80484cb:       ff d0                   call   eax
 80484cd:       8b 03                   mov    eax,DWORD PTR [ebx]
 80484cf:       83 f8 ff                cmp    eax,0xffffffff
 80484d2:       75 f4                   jne    80484c8 <__do_global_ctors_aux+0x18>
 80484d4:       83 c4 04                add    esp,0x4
 80484d7:       5b                      pop    ebx
 80484d8:       5d                      pop    ebp
 80484d9:       c3                      ret
 80484da:       90                      nop
 80484db:       90                      nop

Disassembly of section .fini:

080484dc <_fini>:
 80484dc:       55                      push   ebp
 80484dd:       89 e5                   mov    ebp,esp
 80484df:       53                      push   ebx
 80484e0:       83 ec 04                sub    esp,0x4
 80484e3:       e8 00 00 00 00          call   80484e8 <_fini+0xc>
 80484e8:       5b                      pop    ebx
 80484e9:       81 c3 24 11 00 00       add    ebx,0x1124
 80484ef:       e8 7c fe ff ff          call   8048370 <__do_global_dtors_aux>
 80484f4:       59                      pop    ecx
 80484f5:       5b                      pop    ebx
 80484f6:       c9                      leave
 80484f7:       c3                      ret