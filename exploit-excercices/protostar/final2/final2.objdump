user@protostar:~$ objdump -tT -rR /opt/protostar/bin/final2

/opt/protostar/bin/final2:     file format elf32-i386

SYMBOL TABLE:
08048114 l    d  .interp        00000000              .interp
08048128 l    d  .note.ABI-tag  00000000              .note.ABI-tag
08048148 l    d  .note.gnu.build-id     00000000              .note.gnu.build-id
0804816c l    d  .hash  00000000              .hash
08048394 l    d  .gnu.hash      00000000              .gnu.hash
08048448 l    d  .dynsym        00000000              .dynsym
08048898 l    d  .dynstr        00000000              .dynstr
08048a98 l    d  .gnu.version   00000000              .gnu.version
08048b24 l    d  .gnu.version_r 00000000              .gnu.version_r
08048b44 l    d  .rel.dyn       00000000              .rel.dyn
08048b6c l    d  .rel.plt       00000000              .rel.plt
08048cec l    d  .init  00000000              .init
08048d1c l    d  .plt   00000000              .plt
08049030 l    d  .text  00000000              .text
0804bf2c l    d  .fini  00000000              .fini
0804bf48 l    d  .rodata        00000000              .rodata
0804c2ec l    d  .eh_frame      00000000              .eh_frame
0804d2f0 l    d  .ctors 00000000              .ctors
0804d2fc l    d  .dtors 00000000              .dtors
0804d304 l    d  .jcr   00000000              .jcr
0804d308 l    d  .dynamic       00000000              .dynamic
0804d3d8 l    d  .got   00000000              .got
0804d3dc l    d  .got.plt       00000000              .got.plt
0804d4a8 l    d  .data  00000000              .data
0804d4c0 l    d  .bss   00000000              .bss
00000000 l    d  .stab  00000000              .stab
00000000 l    d  .stabstr       00000000              .stabstr
00000000 l    d  .comment       00000000              .comment
00000000 l    df *ABS*  00000000              crtstuff.c
0804d2f0 l     O .ctors 00000000              __CTOR_LIST__
0804d2fc l     O .dtors 00000000              __DTOR_LIST__
0804d304 l     O .jcr   00000000              __JCR_LIST__
08049060 l     F .text  00000000              __do_global_dtors_aux
0804d4e4 l     O .bss   00000001              completed.5982
0804d4e8 l     O .bss   00000004              dtor_idx.5984
080490c0 l     F .text  00000000              frame_dummy
00000000 l    df *ABS*  00000000              crtstuff.c
0804d2f8 l     O .ctors 00000000              __CTOR_END__
0804c2ec l     O .eh_frame      00000000              __FRAME_END__
0804d304 l     O .jcr   00000000              __JCR_END__
0804bf00 l     F .text  00000000              __do_global_ctors_aux
00000000 l    df *ABS*  00000000              final2.c
0804d500 l     O .bss   00000474              av_
08049ada l     F .text  000000b1              malloc_init_state
08049b8b l     F .text  00000521              sYSMALLOc
0804a0ac l     F .text  000000e4              sYSTRIm
0804ac29 l     F .text  000001d2              malloc_consolidate
0804b655 l     F .text  00000279              iALLOc
0804d3dc l     O .got.plt       00000000              .hidden _GLOBAL_OFFSET_TABLE_
0804d2f0 l       .ctors 00000000              .hidden __init_array_end
0804d2f0 l       .ctors 00000000              .hidden __init_array_start
0804d308 l     O .dynamic       00000000              .hidden _DYNAMIC
0804d4a8  w      .data  00000000              data_start
00000000       F *UND*  00000000              __errno_location@@GLIBC_2.0
08049944 g     F .text  00000074              nwrite
0804b98c g     F .text  0000005b              malloc_usable_size
0804b960 g     F .text  0000002c              malloc_trim
080490fc g     F .text  00000031              handle_signals
00000000       F *UND*  00000000              srand@@GLIBC_2.0
00000000       F *UND*  00000000              open@@GLIBC_2.0
00000000       F *UND*  00000000              mmap@@GLIBC_2.0
00000000       F *UND*  00000000              setgroups@@GLIBC_2.0
00000000       F *UND*  00000000              getpid@@GLIBC_2.0
080499b8 g     F .text  000000ef              secure_srand
00000000       F *UND*  00000000              strerror@@GLIBC_2.0
0804b4ee g     F .text  000000fc              calloc
00000000       F *UND*  00000000              daemon@@GLIBC_2.0
0804be90 g     F .text  00000005              __libc_csu_fini
00000000       F *UND*  00000000              sysconf@@GLIBC_2.0
08049030 g     F .text  00000000              _start
00000000       F *UND*  00000000              err@@GLIBC_2.0
080491d8 g     F .text  000002df              background_process
080494b7 g     F .text  000001be              get_tcp_server_socket
00000000       F *UND*  00000000              signal@@GLIBC_2.0
0804bb7a g     F .text  0000007f              malloc_stats
00000000  w      *UND*  00000000              __gmon_start__
00000000  w      *UND*  00000000              _Jv_RegisterClasses
0804bf48 g     O .rodata        00000004              _fp_hw
0804adfb g     F .text  000004d5              realloc
080498d0 g     F .text  00000074              nread
0804bf2c g     F .fini  00000000              _fini
00000000       F *UND*  00000000              mremap@@GLIBC_2.0
00000000       F *UND*  00000000              write@@GLIBC_2.0
00000000       F *UND*  00000000              listen@@GLIBC_2.0
00000000       F *UND*  00000000              memset@@GLIBC_2.0
0804988e g     F .text  00000042              is_restarted_process
0804a190 g     F .text  00000832              malloc
00000000       F *UND*  00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*  00000000              wait@@GLIBC_2.0
00000000       F *UND*  00000000              htons@@GLIBC_2.0
00000000       F *UND*  00000000              read@@GLIBC_2.0
0804b5fd g     F .text  0000002f              independent_calloc
0804bf4c g     O .rodata        00000004              _IO_stdin_used
00000000       F *UND*  00000000              setresuid@@GLIBC_2.0
08049755 g     F .text  000000b0              set_io
0804d4a8 g       .data  00000000              __data_start
00000000       F *UND*  00000000              setresgid@@GLIBC_2.0
00000000       F *UND*  00000000              sbrk@@GLIBC_2.0
00000000       F *UND*  00000000              accept@@GLIBC_2.0
00000000       F *UND*  00000000              socket@@GLIBC_2.0
00000000       F *UND*  00000000              dup2@@GLIBC_2.0
080490e4 g     F .text  00000018              child_reaper
0804b2d0 g     F .text  0000021e              memalign
0804d4c0 g     O .bss   00000004              stderr@@GLIBC_2.0
00000000       F *UND*  00000000              memcpy@@GLIBC_2.0
0804bbf9 g     F .text  000000d7              mallopt
08049675 g     F .text  000000e0              serve_forever
00000000       F *UND*  00000000              strlen@@GLIBC_2.0
00000000       F *UND*  00000000              asprintf@@GLIBC_2.0
0804d4ac g     O .data  00000000              .hidden __dso_handle
0804d300 g     O .dtors 00000000              .hidden __DTOR_END__
0804bea0 g     F .text  0000005a              __libc_csu_init
00000000       F *UND*  00000000              printf@@GLIBC_2.0
00000000       F *UND*  00000000              bind@@GLIBC_2.0
0804b5ea g     F .text  00000013              cfree
0804d4c4  w    O .bss   00000004              environ@@GLIBC_2.0
0804b62c g     F .text  00000029              independent_comalloc
0804bcd0 g     F .text  00000077              check_path
08049805 g     F .text  00000089              restart_process
0804b90c g     F .text  00000054              pvalloc
00000000       F *UND*  00000000              close@@GLIBC_2.0
00000000       F *UND*  00000000              fwrite@@GLIBC_2.0
00000000       F *UND*  00000000              fprintf@@GLIBC_2.0
00000000       F *UND*  00000000              strstr@@GLIBC_2.0
00000000       F *UND*  00000000              setvbuf@@GLIBC_2.0
00000000       F *UND*  00000000              execve@@GLIBC_2.0
0804d4b0 g       *ABS*  00000000              __bss_start
00000000       F *UND*  00000000              rindex@@GLIBC_2.0
0804d4c8 g     O .bss   00000004              stdin@@GLIBC_2.0
00000000       F *UND*  00000000              memmove@@GLIBC_2.0
0804bd47 g     F .text  000000df              get_requests
0804d974 g       *ABS*  00000000              _end
0804d4e0 g     O .bss   00000004              stdout@@GLIBC_2.0
00000000       F *UND*  00000000              fork@@GLIBC_2.0
08049aa7 g     F .text  00000033              xmalloc
00000000       F *UND*  00000000              setsockopt@@GLIBC_2.0
0804b9e7 g     F .text  00000193              mallinfo
0804912d g     F .text  000000ab              validate_name
00000000       F *UND*  00000000              rand@@GLIBC_2.0
00000000       F *UND*  00000000              htonl@@GLIBC_2.0
0804d4c4 g     O .bss   00000004              __environ@@GLIBC_2.0
00000000       F *UND*  00000000              strncmp@@GLIBC_2.0
00000000       F *UND*  00000000              munmap@@GLIBC_2.0
0804a9c2 g     F .text  00000267              free
0804d4b0 g       *ABS*  00000000              _edata
00000000       F *UND*  00000000              snprintf@@GLIBC_2.0
00000000       F *UND*  00000000              strcmp@@GLIBC_2.0
00000000       F *UND*  00000000              exit@@GLIBC_2.0
0804b8ce g     F .text  0000003e              valloc
0804befa g     F .text  00000000              .hidden __i686.get_pc_thunk.bx
0804be26 g     F .text  00000063              main
08048cec g     F .init  00000000              _init


DYNAMIC SYMBOL TABLE:
00000000      DF *UND*  00000000  GLIBC_2.0   __errno_location
00000000      DF *UND*  00000000  GLIBC_2.0   srand
00000000      DF *UND*  00000000  GLIBC_2.0   open
00000000      DF *UND*  00000000  GLIBC_2.0   mmap
00000000      DF *UND*  00000000  GLIBC_2.0   setgroups
00000000      DF *UND*  00000000  GLIBC_2.0   getpid
00000000      DF *UND*  00000000  GLIBC_2.0   strerror
00000000      DF *UND*  00000000  GLIBC_2.0   daemon
00000000      DF *UND*  00000000  GLIBC_2.0   sysconf
00000000      DF *UND*  00000000  GLIBC_2.0   err
00000000      DF *UND*  00000000  GLIBC_2.0   signal
00000000  w   D  *UND*  00000000              __gmon_start__
00000000      DF *UND*  00000000  GLIBC_2.0   mremap
00000000      DF *UND*  00000000  GLIBC_2.0   write
00000000      DF *UND*  00000000  GLIBC_2.0   listen
00000000      DF *UND*  00000000  GLIBC_2.0   memset
00000000      DF *UND*  00000000  GLIBC_2.0   __libc_start_main
00000000      DF *UND*  00000000  GLIBC_2.0   wait
00000000      DF *UND*  00000000  GLIBC_2.0   htons
00000000      DF *UND*  00000000  GLIBC_2.0   read
00000000      DF *UND*  00000000  GLIBC_2.0   setresuid
00000000      DF *UND*  00000000  GLIBC_2.0   setresgid
00000000      DF *UND*  00000000  GLIBC_2.0   sbrk
00000000      DF *UND*  00000000  GLIBC_2.0   accept
00000000      DF *UND*  00000000  GLIBC_2.0   socket
00000000      DF *UND*  00000000  GLIBC_2.0   dup2
00000000      DF *UND*  00000000  GLIBC_2.0   memcpy
00000000      DF *UND*  00000000  GLIBC_2.0   strlen
00000000      DF *UND*  00000000  GLIBC_2.0   asprintf
00000000      DF *UND*  00000000  GLIBC_2.0   printf
00000000      DF *UND*  00000000  GLIBC_2.0   bind
00000000      DF *UND*  00000000  GLIBC_2.0   close
00000000      DF *UND*  00000000  GLIBC_2.0   fwrite
00000000      DF *UND*  00000000  GLIBC_2.0   fprintf
00000000      DF *UND*  00000000  GLIBC_2.0   strstr
00000000      DF *UND*  00000000  GLIBC_2.0   setvbuf
00000000      DF *UND*  00000000  GLIBC_2.0   execve
00000000      DF *UND*  00000000  GLIBC_2.0   rindex
00000000      DF *UND*  00000000  GLIBC_2.0   memmove
00000000      DF *UND*  00000000  GLIBC_2.0   fork
00000000      DF *UND*  00000000  GLIBC_2.0   setsockopt
00000000      DF *UND*  00000000  GLIBC_2.0   rand
00000000      DF *UND*  00000000  GLIBC_2.0   htonl
00000000      DF *UND*  00000000  GLIBC_2.0   strncmp
00000000      DF *UND*  00000000  GLIBC_2.0   munmap
00000000      DF *UND*  00000000  GLIBC_2.0   snprintf
00000000      DF *UND*  00000000  GLIBC_2.0   strcmp
00000000      DF *UND*  00000000  GLIBC_2.0   exit
0804b2d0 g    DF .text  0000021e  Base        memalign
0804bbf9 g    DF .text  000000d7  Base        mallopt
0804b5ea g    DF .text  00000013  Base        cfree
0804b9e7 g    DF .text  00000193  Base        mallinfo
0804a9c2 g    DF .text  00000267  Base        free
0804b960 g    DF .text  0000002c  Base        malloc_trim
0804bf4c g    DO .rodata        00000004  Base        _IO_stdin_used
0804b90c g    DF .text  00000054  Base        pvalloc
0804adfb g    DF .text  000004d5  Base        realloc
0804d4c4 g    DO .bss   00000004  GLIBC_2.0   __environ
0804b8ce g    DF .text  0000003e  Base        valloc
0804d4c0 g    DO .bss   00000004  GLIBC_2.0   stderr
0804d4c4  w   DO .bss   00000004  GLIBC_2.0   _environ
0804b4ee g    DF .text  000000fc  Base        calloc
0804d4c4  w   DO .bss   00000004  GLIBC_2.0   environ
0804d4c8 g    DO .bss   00000004  GLIBC_2.0   stdin
0804b98c g    DF .text  0000005b  Base        malloc_usable_size
0804bb7a g    DF .text  0000007f  Base        malloc_stats
0804a190 g    DF .text  00000832  Base        malloc
0804d4e0 g    DO .bss   00000004  GLIBC_2.0   stdout


DYNAMIC RELOCATION RECORDS
OFFSET   TYPE              VALUE
0804d3d8 R_386_GLOB_DAT    __gmon_start__
0804d4c0 R_386_COPY        stderr
0804d4c4 R_386_COPY        __environ
0804d4c8 R_386_COPY        stdin
0804d4e0 R_386_COPY        stdout
0804d3e8 R_386_JUMP_SLOT   __errno_location
0804d3ec R_386_JUMP_SLOT   srand
0804d3f0 R_386_JUMP_SLOT   open
0804d3f4 R_386_JUMP_SLOT   mmap
0804d3f8 R_386_JUMP_SLOT   setgroups
0804d3fc R_386_JUMP_SLOT   getpid
0804d400 R_386_JUMP_SLOT   strerror
0804d404 R_386_JUMP_SLOT   daemon
0804d408 R_386_JUMP_SLOT   sysconf
0804d40c R_386_JUMP_SLOT   err
0804d410 R_386_JUMP_SLOT   signal
0804d414 R_386_JUMP_SLOT   __gmon_start__
0804d418 R_386_JUMP_SLOT   mremap
0804d41c R_386_JUMP_SLOT   write
0804d420 R_386_JUMP_SLOT   listen
0804d424 R_386_JUMP_SLOT   memset
0804d428 R_386_JUMP_SLOT   __libc_start_main
0804d42c R_386_JUMP_SLOT   wait
0804d430 R_386_JUMP_SLOT   htons
0804d434 R_386_JUMP_SLOT   read
0804d438 R_386_JUMP_SLOT   setresuid
0804d43c R_386_JUMP_SLOT   setresgid
0804d440 R_386_JUMP_SLOT   sbrk
0804d444 R_386_JUMP_SLOT   accept
0804d448 R_386_JUMP_SLOT   socket
0804d44c R_386_JUMP_SLOT   dup2
0804d450 R_386_JUMP_SLOT   memcpy
0804d454 R_386_JUMP_SLOT   strlen
0804d458 R_386_JUMP_SLOT   asprintf
0804d45c R_386_JUMP_SLOT   printf
0804d460 R_386_JUMP_SLOT   bind
0804d464 R_386_JUMP_SLOT   close
0804d468 R_386_JUMP_SLOT   fwrite
0804d46c R_386_JUMP_SLOT   fprintf
0804d470 R_386_JUMP_SLOT   strstr
0804d474 R_386_JUMP_SLOT   setvbuf
0804d478 R_386_JUMP_SLOT   execve
0804d47c R_386_JUMP_SLOT   rindex
0804d480 R_386_JUMP_SLOT   memmove
0804d484 R_386_JUMP_SLOT   fork
0804d488 R_386_JUMP_SLOT   setsockopt
0804d48c R_386_JUMP_SLOT   rand
0804d490 R_386_JUMP_SLOT   htonl
0804d494 R_386_JUMP_SLOT   strncmp
0804d498 R_386_JUMP_SLOT   munmap
0804d49c R_386_JUMP_SLOT   snprintf
0804d4a0 R_386_JUMP_SLOT   strcmp
0804d4a4 R_386_JUMP_SLOT   exit

