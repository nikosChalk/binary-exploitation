# Generated with: objdump --disassembler-options=intel-mnemonic -d -t stack6

stack6:     file format elf32-i386

SYMBOL TABLE:
08048114 l    d  .interp        00000000              .interp
08048128 l    d  .note.ABI-tag  00000000              .note.ABI-tag
08048148 l    d  .note.gnu.build-id     00000000              .note.gnu.build-id
0804816c l    d  .hash  00000000              .hash
080481a4 l    d  .gnu.hash      00000000              .gnu.hash
080481c8 l    d  .dynsym        00000000              .dynsym
08048258 l    d  .dynstr        00000000              .dynstr
080482be l    d  .gnu.version   00000000              .gnu.version
080482d0 l    d  .gnu.version_r 00000000              .gnu.version_r
080482f0 l    d  .rel.dyn       00000000              .rel.dyn
08048300 l    d  .rel.plt       00000000              .rel.plt
08048330 l    d  .init  00000000              .init
08048360 l    d  .plt   00000000              .plt
080483d0 l    d  .text  00000000              .text
080485ac l    d  .fini  00000000              .fini
080485c8 l    d  .rodata        00000000              .rodata
08048600 l    d  .eh_frame      00000000              .eh_frame
08049604 l    d  .ctors 00000000              .ctors
0804960c l    d  .dtors 00000000              .dtors
08049614 l    d  .jcr   00000000              .jcr
08049618 l    d  .dynamic       00000000              .dynamic
080496e8 l    d  .got   00000000              .got
080496ec l    d  .got.plt       00000000              .got.plt
08049710 l    d  .data  00000000              .data
08049720 l    d  .bss   00000000              .bss
00000000 l    d  .stab  00000000              .stab
00000000 l    d  .stabstr       00000000              .stabstr
00000000 l    d  .comment       00000000              .comment
00000000 l    df *ABS*  00000000              crtstuff.c
08049604 l     O .ctors 00000000              __CTOR_LIST__
0804960c l     O .dtors 00000000              __DTOR_LIST__
08049614 l     O .jcr   00000000              __JCR_LIST__
08048400 l     F .text  00000000              __do_global_dtors_aux
08049724 l     O .bss   00000001              completed.5982
08049728 l     O .bss   00000004              dtor_idx.5984
08048460 l     F .text  00000000              frame_dummy
00000000 l    df *ABS*  00000000              crtstuff.c
08049608 l     O .ctors 00000000              __CTOR_END__
08048600 l     O .eh_frame      00000000              __FRAME_END__
08049614 l     O .jcr   00000000              __JCR_END__
08048580 l     F .text  00000000              __do_global_ctors_aux
00000000 l    df *ABS*  00000000              stack6.c
080496ec l     O .got.plt       00000000              .hidden _GLOBAL_OFFSET_TABLE_
08049604 l       .ctors 00000000              .hidden __init_array_end
08049604 l       .ctors 00000000              .hidden __init_array_start
08049618 l     O .dynamic       00000000              .hidden _DYNAMIC
08049710  w      .data  00000000              data_start
08048510 g     F .text  00000005              __libc_csu_fini
080483d0 g     F .text  00000000              _start
00000000  w      *UND*  00000000              __gmon_start__
00000000  w      *UND*  00000000              _Jv_RegisterClasses
080485c8 g     O .rodata        00000004              _fp_hw
080485ac g     F .fini  00000000              _fini
00000000       F *UND*  00000000              gets@@GLIBC_2.0
00000000       F *UND*  00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*  00000000              _exit@@GLIBC_2.0
080485cc g     O .rodata        00000004              _IO_stdin_used
08049710 g       .data  00000000              __data_start
00000000       F *UND*  00000000              fflush@@GLIBC_2.0
08049714 g     O .data  00000000              .hidden __dso_handle
08049610 g     O .dtors 00000000              .hidden __DTOR_END__
08048520 g     F .text  0000005a              __libc_csu_init
00000000       F *UND*  00000000              printf@@GLIBC_2.0
08049718 g       *ABS*  00000000              __bss_start
0804972c g       *ABS*  00000000              _end
08049720 g     O .bss   00000004              stdout@@GLIBC_2.0
08049718 g       *ABS*  00000000              _edata
08048484 g     F .text  00000076              getpath
0804857a g     F .text  00000000              .hidden __i686.get_pc_thunk.bx
080484fa g     F .text  0000000f              main
08048330 g     F .init  00000000              _init



Disassembly of section .init:

08048330 <_init>:
 8048330:       55                      push   ebp
 8048331:       89 e5                   mov    ebp,esp
 8048333:       53                      push   ebx
 8048334:       83 ec 04                sub    esp,0x4
 8048337:       e8 00 00 00 00          call   804833c <_init+0xc>
 804833c:       5b                      pop    ebx
 804833d:       81 c3 b0 13 00 00       add    ebx,0x13b0
 8048343:       8b 93 fc ff ff ff       mov    edx,DWORD PTR [ebx-0x4]
 8048349:       85 d2                   test   edx,edx
 804834b:       74 05                   je     8048352 <_init+0x22>
 804834d:       e8 1e 00 00 00          call   8048370 <__gmon_start__@plt>
 8048352:       e8 09 01 00 00          call   8048460 <frame_dummy>
 8048357:       e8 24 02 00 00          call   8048580 <__do_global_ctors_aux>
 804835c:       58                      pop    eax
 804835d:       5b                      pop    ebx
 804835e:       c9                      leave
 804835f:       c3                      ret

Disassembly of section .plt:

08048360 <__gmon_start__@plt-0x10>:
 8048360:       ff 35 f0 96 04 08       push   DWORD PTR ds:0x80496f0
 8048366:       ff 25 f4 96 04 08       jmp    DWORD PTR ds:0x80496f4
 804836c:       00 00                   add    BYTE PTR [eax],al
        ...

08048370 <__gmon_start__@plt>:
 8048370:       ff 25 f8 96 04 08       jmp    DWORD PTR ds:0x80496f8
 8048376:       68 00 00 00 00          push   0x0
 804837b:       e9 e0 ff ff ff          jmp    8048360 <_init+0x30>

08048380 <gets@plt>:
 8048380:       ff 25 fc 96 04 08       jmp    DWORD PTR ds:0x80496fc
 8048386:       68 08 00 00 00          push   0x8
 804838b:       e9 d0 ff ff ff          jmp    8048360 <_init+0x30>

08048390 <__libc_start_main@plt>:
 8048390:       ff 25 00 97 04 08       jmp    DWORD PTR ds:0x8049700
 8048396:       68 10 00 00 00          push   0x10
 804839b:       e9 c0 ff ff ff          jmp    8048360 <_init+0x30>

080483a0 <_exit@plt>:
 80483a0:       ff 25 04 97 04 08       jmp    DWORD PTR ds:0x8049704
 80483a6:       68 18 00 00 00          push   0x18
 80483ab:       e9 b0 ff ff ff          jmp    8048360 <_init+0x30>

080483b0 <fflush@plt>:
 80483b0:       ff 25 08 97 04 08       jmp    DWORD PTR ds:0x8049708
 80483b6:       68 20 00 00 00          push   0x20
 80483bb:       e9 a0 ff ff ff          jmp    8048360 <_init+0x30>

080483c0 <printf@plt>:
 80483c0:       ff 25 0c 97 04 08       jmp    DWORD PTR ds:0x804970c
 80483c6:       68 28 00 00 00          push   0x28
 80483cb:       e9 90 ff ff ff          jmp    8048360 <_init+0x30>

Disassembly of section .text:

080483d0 <_start>:
 80483d0:       31 ed                   xor    ebp,ebp
 80483d2:       5e                      pop    esi
 80483d3:       89 e1                   mov    ecx,esp
 80483d5:       83 e4 f0                and    esp,0xfffffff0
 80483d8:       50                      push   eax
 80483d9:       54                      push   esp
 80483da:       52                      push   edx
 80483db:       68 10 85 04 08          push   0x8048510
 80483e0:       68 20 85 04 08          push   0x8048520
 80483e5:       51                      push   ecx
 80483e6:       56                      push   esi
 80483e7:       68 fa 84 04 08          push   0x80484fa
 80483ec:       e8 9f ff ff ff          call   8048390 <__libc_start_main@plt>
 80483f1:       f4                      hlt
 80483f2:       90                      nop
 80483f3:       90                      nop
 80483f4:       90                      nop
 80483f5:       90                      nop
 80483f6:       90                      nop
 80483f7:       90                      nop
 80483f8:       90                      nop
 80483f9:       90                      nop
 80483fa:       90                      nop
 80483fb:       90                      nop
 80483fc:       90                      nop
 80483fd:       90                      nop
 80483fe:       90                      nop
 80483ff:       90                      nop

08048400 <__do_global_dtors_aux>:
 8048400:       55                      push   ebp
 8048401:       89 e5                   mov    ebp,esp
 8048403:       53                      push   ebx
 8048404:       83 ec 04                sub    esp,0x4
 8048407:       80 3d 24 97 04 08 00    cmp    BYTE PTR ds:0x8049724,0x0
 804840e:       75 3f                   jne    804844f <__do_global_dtors_aux+0x4f>
 8048410:       a1 28 97 04 08          mov    eax,ds:0x8049728
 8048415:       bb 10 96 04 08          mov    ebx,0x8049610
 804841a:       81 eb 0c 96 04 08       sub    ebx,0x804960c
 8048420:       c1 fb 02                sar    ebx,0x2
 8048423:       83 eb 01                sub    ebx,0x1
 8048426:       39 d8                   cmp    eax,ebx
 8048428:       73 1e                   jae    8048448 <__do_global_dtors_aux+0x48>
 804842a:       8d b6 00 00 00 00       lea    esi,[esi+0x0]
 8048430:       83 c0 01                add    eax,0x1
 8048433:       a3 28 97 04 08          mov    ds:0x8049728,eax
 8048438:       ff 14 85 0c 96 04 08    call   DWORD PTR [eax*4+0x804960c]
 804843f:       a1 28 97 04 08          mov    eax,ds:0x8049728
 8048444:       39 d8                   cmp    eax,ebx
 8048446:       72 e8                   jb     8048430 <__do_global_dtors_aux+0x30>
 8048448:       c6 05 24 97 04 08 01    mov    BYTE PTR ds:0x8049724,0x1
 804844f:       83 c4 04                add    esp,0x4
 8048452:       5b                      pop    ebx
 8048453:       5d                      pop    ebp
 8048454:       c3                      ret
 8048455:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 8048459:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

08048460 <frame_dummy>:
 8048460:       55                      push   ebp
 8048461:       89 e5                   mov    ebp,esp
 8048463:       83 ec 18                sub    esp,0x18
 8048466:       a1 14 96 04 08          mov    eax,ds:0x8049614
 804846b:       85 c0                   test   eax,eax
 804846d:       74 12                   je     8048481 <frame_dummy+0x21>
 804846f:       b8 00 00 00 00          mov    eax,0x0
 8048474:       85 c0                   test   eax,eax
 8048476:       74 09                   je     8048481 <frame_dummy+0x21>
 8048478:       c7 04 24 14 96 04 08    mov    DWORD PTR [esp],0x8049614
 804847f:       ff d0                   call   eax
 8048481:       c9                      leave
 8048482:       c3                      ret
 8048483:       90                      nop

08048484 <getpath>:
 8048484:       55                      push   ebp
 8048485:       89 e5                   mov    ebp,esp
 8048487:       83 ec 68                sub    esp,0x68
 804848a:       b8 d0 85 04 08          mov    eax,0x80485d0
 804848f:       89 04 24                mov    DWORD PTR [esp],eax
 8048492:       e8 29 ff ff ff          call   80483c0 <printf@plt>
 8048497:       a1 20 97 04 08          mov    eax,ds:0x8049720
 804849c:       89 04 24                mov    DWORD PTR [esp],eax
 804849f:       e8 0c ff ff ff          call   80483b0 <fflush@plt>
 80484a4:       8d 45 b4                lea    eax,[ebp-0x4c]
 80484a7:       89 04 24                mov    DWORD PTR [esp],eax
 80484aa:       e8 d1 fe ff ff          call   8048380 <gets@plt>
 80484af:       8b 45 04                mov    eax,DWORD PTR [ebp+0x4]
 80484b2:       89 45 f4                mov    DWORD PTR [ebp-0xc],eax
 80484b5:       8b 45 f4                mov    eax,DWORD PTR [ebp-0xc]
 80484b8:       25 00 00 00 bf          and    eax,0xbf000000
 80484bd:       3d 00 00 00 bf          cmp    eax,0xbf000000
 80484c2:       75 20                   jne    80484e4 <getpath+0x60>
 80484c4:       b8 e4 85 04 08          mov    eax,0x80485e4
 80484c9:       8b 55 f4                mov    edx,DWORD PTR [ebp-0xc]
 80484cc:       89 54 24 04             mov    DWORD PTR [esp+0x4],edx
 80484d0:       89 04 24                mov    DWORD PTR [esp],eax
 80484d3:       e8 e8 fe ff ff          call   80483c0 <printf@plt>
 80484d8:       c7 04 24 01 00 00 00    mov    DWORD PTR [esp],0x1
 80484df:       e8 bc fe ff ff          call   80483a0 <_exit@plt>
 80484e4:       b8 f0 85 04 08          mov    eax,0x80485f0
 80484e9:       8d 55 b4                lea    edx,[ebp-0x4c]
 80484ec:       89 54 24 04             mov    DWORD PTR [esp+0x4],edx
 80484f0:       89 04 24                mov    DWORD PTR [esp],eax
 80484f3:       e8 c8 fe ff ff          call   80483c0 <printf@plt>
 80484f8:       c9                      leave
 80484f9:       c3                      ret

080484fa <main>:
 80484fa:       55                      push   ebp
 80484fb:       89 e5                   mov    ebp,esp
 80484fd:       83 e4 f0                and    esp,0xfffffff0
 8048500:       e8 7f ff ff ff          call   8048484 <getpath>
 8048505:       89 ec                   mov    esp,ebp
 8048507:       5d                      pop    ebp
 8048508:       c3                      ret
 8048509:       90                      nop
 804850a:       90                      nop
 804850b:       90                      nop
 804850c:       90                      nop
 804850d:       90                      nop
 804850e:       90                      nop
 804850f:       90                      nop

08048510 <__libc_csu_fini>:
 8048510:       55                      push   ebp
 8048511:       89 e5                   mov    ebp,esp
 8048513:       5d                      pop    ebp
 8048514:       c3                      ret
 8048515:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 8048519:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

08048520 <__libc_csu_init>:
 8048520:       55                      push   ebp
 8048521:       89 e5                   mov    ebp,esp
 8048523:       57                      push   edi
 8048524:       56                      push   esi
 8048525:       53                      push   ebx
 8048526:       e8 4f 00 00 00          call   804857a <__i686.get_pc_thunk.bx>
 804852b:       81 c3 c1 11 00 00       add    ebx,0x11c1
 8048531:       83 ec 1c                sub    esp,0x1c
 8048534:       e8 f7 fd ff ff          call   8048330 <_init>
 8048539:       8d bb 18 ff ff ff       lea    edi,[ebx-0xe8]
 804853f:       8d 83 18 ff ff ff       lea    eax,[ebx-0xe8]
 8048545:       29 c7                   sub    edi,eax
 8048547:       c1 ff 02                sar    edi,0x2
 804854a:       85 ff                   test   edi,edi
 804854c:       74 24                   je     8048572 <__libc_csu_init+0x52>
 804854e:       31 f6                   xor    esi,esi
 8048550:       8b 45 10                mov    eax,DWORD PTR [ebp+0x10]
 8048553:       89 44 24 08             mov    DWORD PTR [esp+0x8],eax
 8048557:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 804855a:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 804855e:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 8048561:       89 04 24                mov    DWORD PTR [esp],eax
 8048564:       ff 94 b3 18 ff ff ff    call   DWORD PTR [ebx+esi*4-0xe8]
 804856b:       83 c6 01                add    esi,0x1
 804856e:       39 fe                   cmp    esi,edi
 8048570:       72 de                   jb     8048550 <__libc_csu_init+0x30>
 8048572:       83 c4 1c                add    esp,0x1c
 8048575:       5b                      pop    ebx
 8048576:       5e                      pop    esi
 8048577:       5f                      pop    edi
 8048578:       5d                      pop    ebp
 8048579:       c3                      ret

0804857a <__i686.get_pc_thunk.bx>:
 804857a:       8b 1c 24                mov    ebx,DWORD PTR [esp]
 804857d:       c3                      ret
 804857e:       90                      nop
 804857f:       90                      nop

08048580 <__do_global_ctors_aux>:
 8048580:       55                      push   ebp
 8048581:       89 e5                   mov    ebp,esp
 8048583:       53                      push   ebx
 8048584:       83 ec 04                sub    esp,0x4
 8048587:       a1 04 96 04 08          mov    eax,ds:0x8049604
 804858c:       83 f8 ff                cmp    eax,0xffffffff
 804858f:       74 13                   je     80485a4 <__do_global_ctors_aux+0x24>
 8048591:       bb 04 96 04 08          mov    ebx,0x8049604
 8048596:       66 90                   xchg   ax,ax
 8048598:       83 eb 04                sub    ebx,0x4
 804859b:       ff d0                   call   eax
 804859d:       8b 03                   mov    eax,DWORD PTR [ebx]
 804859f:       83 f8 ff                cmp    eax,0xffffffff
 80485a2:       75 f4                   jne    8048598 <__do_global_ctors_aux+0x18>
 80485a4:       83 c4 04                add    esp,0x4
 80485a7:       5b                      pop    ebx
 80485a8:       5d                      pop    ebp
 80485a9:       c3                      ret
 80485aa:       90                      nop
 80485ab:       90                      nop

Disassembly of section .fini:

080485ac <_fini>:
 80485ac:       55                      push   ebp
 80485ad:       89 e5                   mov    ebp,esp
 80485af:       53                      push   ebx
 80485b0:       83 ec 04                sub    esp,0x4
 80485b3:       e8 00 00 00 00          call   80485b8 <_fini+0xc>
 80485b8:       5b                      pop    ebx
 80485b9:       81 c3 34 11 00 00       add    ebx,0x1134
 80485bf:       e8 3c fe ff ff          call   8048400 <__do_global_dtors_aux>
 80485c4:       59                      pop    ecx
 80485c5:       5b                      pop    ebx
 80485c6:       c9                      leave
 80485c7:       c3                      ret
