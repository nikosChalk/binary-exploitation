# Generated with: user@protostar:/opt/protostar/bin$ objdump -d --disassembler-options=intel-mneonic -t stack7

stack7:     file format elf32-i386

SYMBOL TABLE:
08048114 l    d  .interp        00000000              .interp
08048128 l    d  .note.ABI-tag  00000000              .note.ABI-tag
08048148 l    d  .note.gnu.build-id     00000000              .note.gnu.build-id
0804816c l    d  .hash  00000000              .hash
080481a8 l    d  .gnu.hash      00000000              .gnu.hash
080481cc l    d  .dynsym        00000000              .dynsym
0804826c l    d  .dynstr        00000000              .dynstr
080482d8 l    d  .gnu.version   00000000              .gnu.version
080482ec l    d  .gnu.version_r 00000000              .gnu.version_r
0804830c l    d  .rel.dyn       00000000              .rel.dyn
0804831c l    d  .rel.plt       00000000              .rel.plt
08048354 l    d  .init  00000000              .init
08048384 l    d  .plt   00000000              .plt
08048410 l    d  .text  00000000              .text
080485fc l    d  .fini  00000000              .fini
08048618 l    d  .rodata        00000000              .rodata
08048650 l    d  .eh_frame      00000000              .eh_frame
08049654 l    d  .ctors 00000000              .ctors
0804965c l    d  .dtors 00000000              .dtors
08049664 l    d  .jcr   00000000              .jcr
08049668 l    d  .dynamic       00000000              .dynamic
08049738 l    d  .got   00000000              .got
0804973c l    d  .got.plt       00000000              .got.plt
08049764 l    d  .data  00000000              .data
08049780 l    d  .bss   00000000              .bss
00000000 l    d  .stab  00000000              .stab
00000000 l    d  .stabstr       00000000              .stabstr
00000000 l    d  .comment       00000000              .comment
00000000 l    df *ABS*  00000000              crtstuff.c
08049654 l     O .ctors 00000000              __CTOR_LIST__
0804965c l     O .dtors 00000000              __DTOR_LIST__
08049664 l     O .jcr   00000000              __JCR_LIST__
08048440 l     F .text  00000000              __do_global_dtors_aux
08049784 l     O .bss   00000001              completed.5982
08049788 l     O .bss   00000004              dtor_idx.5984
080484a0 l     F .text  00000000              frame_dummy
00000000 l    df *ABS*  00000000              crtstuff.c
08049658 l     O .ctors 00000000              __CTOR_END__
08048650 l     O .eh_frame      00000000              __FRAME_END__
08049664 l     O .jcr   00000000              __JCR_END__
080485d0 l     F .text  00000000              __do_global_ctors_aux
00000000 l    df *ABS*  00000000              stack7.c
0804973c l     O .got.plt       00000000              .hidden _GLOBAL_OFFSET_TABLE_
08049654 l       .ctors 00000000              .hidden __init_array_end
08049654 l       .ctors 00000000              .hidden __init_array_start
08049668 l     O .dynamic       00000000              .hidden _DYNAMIC
08049764  w      .data  00000000              data_start
08048560 g     F .text  00000005              __libc_csu_fini
08048410 g     F .text  00000000              _start
00000000  w      *UND*  00000000              __gmon_start__
00000000  w      *UND*  00000000              _Jv_RegisterClasses
08048618 g     O .rodata        00000004              _fp_hw
080485fc g     F .fini  00000000              _fini
00000000       F *UND*  00000000              gets@@GLIBC_2.0
00000000       F *UND*  00000000              __libc_start_main@@GLIBC_2.0
00000000       F *UND*  00000000              _exit@@GLIBC_2.0
0804861c g     O .rodata        00000004              _IO_stdin_used
08049764 g       .data  00000000              __data_start
00000000       F *UND*  00000000              fflush@@GLIBC_2.0
08049768 g     O .data  00000000              .hidden __dso_handle
08049660 g     O .dtors 00000000              .hidden __DTOR_END__
08048570 g     F .text  0000005a              __libc_csu_init
00000000       F *UND*  00000000              printf@@GLIBC_2.0
0804976c g       *ABS*  00000000              __bss_start
0804978c g       *ABS*  00000000              _end
08049780 g     O .bss   00000004              stdout@@GLIBC_2.0
0804976c g       *ABS*  00000000              _edata
00000000       F *UND*  00000000              strdup@@GLIBC_2.0
080484c4 g     F .text  00000081              getpath
080485ca g     F .text  00000000              .hidden __i686.get_pc_thunk.bx
08048545 g     F .text  0000000f              main
08048354 g     F .init  00000000              _init



Disassembly of section .init:

08048354 <_init>:
 8048354:       55                      push   ebp
 8048355:       89 e5                   mov    ebp,esp
 8048357:       53                      push   ebx
 8048358:       83 ec 04                sub    esp,0x4
 804835b:       e8 00 00 00 00          call   8048360 <_init+0xc>
 8048360:       5b                      pop    ebx
 8048361:       81 c3 dc 13 00 00       add    ebx,0x13dc
 8048367:       8b 93 fc ff ff ff       mov    edx,DWORD PTR [ebx-0x4]
 804836d:       85 d2                   test   edx,edx
 804836f:       74 05                   je     8048376 <_init+0x22>
 8048371:       e8 1e 00 00 00          call   8048394 <__gmon_start__@plt>
 8048376:       e8 25 01 00 00          call   80484a0 <frame_dummy>
 804837b:       e8 50 02 00 00          call   80485d0 <__do_global_ctors_aux>
 8048380:       58                      pop    eax
 8048381:       5b                      pop    ebx
 8048382:       c9                      leave
 8048383:       c3                      ret

Disassembly of section .plt:

08048384 <__gmon_start__@plt-0x10>:
 8048384:       ff 35 40 97 04 08       push   DWORD PTR ds:0x8049740
 804838a:       ff 25 44 97 04 08       jmp    DWORD PTR ds:0x8049744
 8048390:       00 00                   add    BYTE PTR [eax],al
        ...

08048394 <__gmon_start__@plt>:
 8048394:       ff 25 48 97 04 08       jmp    DWORD PTR ds:0x8049748
 804839a:       68 00 00 00 00          push   0x0
 804839f:       e9 e0 ff ff ff          jmp    8048384 <_init+0x30>

080483a4 <gets@plt>:
 80483a4:       ff 25 4c 97 04 08       jmp    DWORD PTR ds:0x804974c
 80483aa:       68 08 00 00 00          push   0x8
 80483af:       e9 d0 ff ff ff          jmp    8048384 <_init+0x30>

080483b4 <__libc_start_main@plt>:
 80483b4:       ff 25 50 97 04 08       jmp    DWORD PTR ds:0x8049750
 80483ba:       68 10 00 00 00          push   0x10
 80483bf:       e9 c0 ff ff ff          jmp    8048384 <_init+0x30>

080483c4 <_exit@plt>:
 80483c4:       ff 25 54 97 04 08       jmp    DWORD PTR ds:0x8049754
 80483ca:       68 18 00 00 00          push   0x18
 80483cf:       e9 b0 ff ff ff          jmp    8048384 <_init+0x30>

080483d4 <fflush@plt>:
 80483d4:       ff 25 58 97 04 08       jmp    DWORD PTR ds:0x8049758
 80483da:       68 20 00 00 00          push   0x20
 80483df:       e9 a0 ff ff ff          jmp    8048384 <_init+0x30>

080483e4 <printf@plt>:
 80483e4:       ff 25 5c 97 04 08       jmp    DWORD PTR ds:0x804975c
 80483ea:       68 28 00 00 00          push   0x28
 80483ef:       e9 90 ff ff ff          jmp    8048384 <_init+0x30>

080483f4 <strdup@plt>:
 80483f4:       ff 25 60 97 04 08       jmp    DWORD PTR ds:0x8049760
 80483fa:       68 30 00 00 00          push   0x30
 80483ff:       e9 80 ff ff ff          jmp    8048384 <_init+0x30>

Disassembly of section .text:

08048410 <_start>:
 8048410:       31 ed                   xor    ebp,ebp
 8048412:       5e                      pop    esi
 8048413:       89 e1                   mov    ecx,esp
 8048415:       83 e4 f0                and    esp,0xfffffff0
 8048418:       50                      push   eax
 8048419:       54                      push   esp
 804841a:       52                      push   edx
 804841b:       68 60 85 04 08          push   0x8048560
 8048420:       68 70 85 04 08          push   0x8048570
 8048425:       51                      push   ecx
 8048426:       56                      push   esi
 8048427:       68 45 85 04 08          push   0x8048545
 804842c:       e8 83 ff ff ff          call   80483b4 <__libc_start_main@plt>
 8048431:       f4                      hlt
 8048432:       90                      nop
 8048433:       90                      nop
 8048434:       90                      nop
 8048435:       90                      nop
 8048436:       90                      nop
 8048437:       90                      nop
 8048438:       90                      nop
 8048439:       90                      nop
 804843a:       90                      nop
 804843b:       90                      nop
 804843c:       90                      nop
 804843d:       90                      nop
 804843e:       90                      nop
 804843f:       90                      nop

08048440 <__do_global_dtors_aux>:
 8048440:       55                      push   ebp
 8048441:       89 e5                   mov    ebp,esp
 8048443:       53                      push   ebx
 8048444:       83 ec 04                sub    esp,0x4
 8048447:       80 3d 84 97 04 08 00    cmp    BYTE PTR ds:0x8049784,0x0
 804844e:       75 3f                   jne    804848f <__do_global_dtors_aux+0x4f>
 8048450:       a1 88 97 04 08          mov    eax,ds:0x8049788
 8048455:       bb 60 96 04 08          mov    ebx,0x8049660
 804845a:       81 eb 5c 96 04 08       sub    ebx,0x804965c
 8048460:       c1 fb 02                sar    ebx,0x2
 8048463:       83 eb 01                sub    ebx,0x1
 8048466:       39 d8                   cmp    eax,ebx
 8048468:       73 1e                   jae    8048488 <__do_global_dtors_aux+0x48>
 804846a:       8d b6 00 00 00 00       lea    esi,[esi+0x0]
 8048470:       83 c0 01                add    eax,0x1
 8048473:       a3 88 97 04 08          mov    ds:0x8049788,eax
 8048478:       ff 14 85 5c 96 04 08    call   DWORD PTR [eax*4+0x804965c]
 804847f:       a1 88 97 04 08          mov    eax,ds:0x8049788
 8048484:       39 d8                   cmp    eax,ebx
 8048486:       72 e8                   jb     8048470 <__do_global_dtors_aux+0x30>
 8048488:       c6 05 84 97 04 08 01    mov    BYTE PTR ds:0x8049784,0x1
 804848f:       83 c4 04                add    esp,0x4
 8048492:       5b                      pop    ebx
 8048493:       5d                      pop    ebp
 8048494:       c3                      ret
 8048495:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 8048499:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

080484a0 <frame_dummy>:
 80484a0:       55                      push   ebp
 80484a1:       89 e5                   mov    ebp,esp
 80484a3:       83 ec 18                sub    esp,0x18
 80484a6:       a1 64 96 04 08          mov    eax,ds:0x8049664
 80484ab:       85 c0                   test   eax,eax
 80484ad:       74 12                   je     80484c1 <frame_dummy+0x21>
 80484af:       b8 00 00 00 00          mov    eax,0x0
 80484b4:       85 c0                   test   eax,eax
 80484b6:       74 09                   je     80484c1 <frame_dummy+0x21>
 80484b8:       c7 04 24 64 96 04 08    mov    DWORD PTR [esp],0x8049664
 80484bf:       ff d0                   call   eax
 80484c1:       c9                      leave
 80484c2:       c3                      ret
 80484c3:       90                      nop

080484c4 <getpath>:
 80484c4:       55                      push   ebp
 80484c5:       89 e5                   mov    ebp,esp
 80484c7:       83 ec 68                sub    esp,0x68
 80484ca:       b8 20 86 04 08          mov    eax,0x8048620
 80484cf:       89 04 24                mov    DWORD PTR [esp],eax
 80484d2:       e8 0d ff ff ff          call   80483e4 <printf@plt>
 80484d7:       a1 80 97 04 08          mov    eax,ds:0x8049780
 80484dc:       89 04 24                mov    DWORD PTR [esp],eax
 80484df:       e8 f0 fe ff ff          call   80483d4 <fflush@plt>
 80484e4:       8d 45 b4                lea    eax,[ebp-0x4c]
 80484e7:       89 04 24                mov    DWORD PTR [esp],eax
 80484ea:       e8 b5 fe ff ff          call   80483a4 <gets@plt>
 80484ef:       8b 45 04                mov    eax,DWORD PTR [ebp+0x4]
 80484f2:       89 45 f4                mov    DWORD PTR [ebp-0xc],eax
 80484f5:       8b 45 f4                mov    eax,DWORD PTR [ebp-0xc]
 80484f8:       25 00 00 00 b0          and    eax,0xb0000000
 80484fd:       3d 00 00 00 b0          cmp    eax,0xb0000000
 8048502:       75 20                   jne    8048524 <getpath+0x60>
 8048504:       b8 34 86 04 08          mov    eax,0x8048634
 8048509:       8b 55 f4                mov    edx,DWORD PTR [ebp-0xc]
 804850c:       89 54 24 04             mov    DWORD PTR [esp+0x4],edx
 8048510:       89 04 24                mov    DWORD PTR [esp],eax
 8048513:       e8 cc fe ff ff          call   80483e4 <printf@plt>
 8048518:       c7 04 24 01 00 00 00    mov    DWORD PTR [esp],0x1
 804851f:       e8 a0 fe ff ff          call   80483c4 <_exit@plt>
 8048524:       b8 40 86 04 08          mov    eax,0x8048640
 8048529:       8d 55 b4                lea    edx,[ebp-0x4c]
 804852c:       89 54 24 04             mov    DWORD PTR [esp+0x4],edx
 8048530:       89 04 24                mov    DWORD PTR [esp],eax
 8048533:       e8 ac fe ff ff          call   80483e4 <printf@plt>
 8048538:       8d 45 b4                lea    eax,[ebp-0x4c]
 804853b:       89 04 24                mov    DWORD PTR [esp],eax
 804853e:       e8 b1 fe ff ff          call   80483f4 <strdup@plt>
 8048543:       c9                      leave
 8048544:       c3                      ret

08048545 <main>:
 8048545:       55                      push   ebp
 8048546:       89 e5                   mov    ebp,esp
 8048548:       83 e4 f0                and    esp,0xfffffff0
 804854b:       e8 74 ff ff ff          call   80484c4 <getpath>
 8048550:       89 ec                   mov    esp,ebp
 8048552:       5d                      pop    ebp
 8048553:       c3                      ret
 8048554:       90                      nop
 8048555:       90                      nop
 8048556:       90                      nop
 8048557:       90                      nop
 8048558:       90                      nop
 8048559:       90                      nop
 804855a:       90                      nop
 804855b:       90                      nop
 804855c:       90                      nop
 804855d:       90                      nop
 804855e:       90                      nop
 804855f:       90                      nop

08048560 <__libc_csu_fini>:
 8048560:       55                      push   ebp
 8048561:       89 e5                   mov    ebp,esp
 8048563:       5d                      pop    ebp
 8048564:       c3                      ret
 8048565:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 8048569:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

08048570 <__libc_csu_init>:
 8048570:       55                      push   ebp
 8048571:       89 e5                   mov    ebp,esp
 8048573:       57                      push   edi
 8048574:       56                      push   esi
 8048575:       53                      push   ebx
 8048576:       e8 4f 00 00 00          call   80485ca <__i686.get_pc_thunk.bx>
 804857b:       81 c3 c1 11 00 00       add    ebx,0x11c1
 8048581:       83 ec 1c                sub    esp,0x1c
 8048584:       e8 cb fd ff ff          call   8048354 <_init>
 8048589:       8d bb 18 ff ff ff       lea    edi,[ebx-0xe8]
 804858f:       8d 83 18 ff ff ff       lea    eax,[ebx-0xe8]
 8048595:       29 c7                   sub    edi,eax
 8048597:       c1 ff 02                sar    edi,0x2
 804859a:       85 ff                   test   edi,edi
 804859c:       74 24                   je     80485c2 <__libc_csu_init+0x52>
 804859e:       31 f6                   xor    esi,esi
 80485a0:       8b 45 10                mov    eax,DWORD PTR [ebp+0x10]
 80485a3:       89 44 24 08             mov    DWORD PTR [esp+0x8],eax
 80485a7:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 80485aa:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 80485ae:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 80485b1:       89 04 24                mov    DWORD PTR [esp],eax
 80485b4:       ff 94 b3 18 ff ff ff    call   DWORD PTR [ebx+esi*4-0xe8]
 80485bb:       83 c6 01                add    esi,0x1
 80485be:       39 fe                   cmp    esi,edi
 80485c0:       72 de                   jb     80485a0 <__libc_csu_init+0x30>
 80485c2:       83 c4 1c                add    esp,0x1c
 80485c5:       5b                      pop    ebx
 80485c6:       5e                      pop    esi
 80485c7:       5f                      pop    edi
 80485c8:       5d                      pop    ebp
 80485c9:       c3                      ret

080485ca <__i686.get_pc_thunk.bx>:
 80485ca:       8b 1c 24                mov    ebx,DWORD PTR [esp]
 80485cd:       c3                      ret
 80485ce:       90                      nop
 80485cf:       90                      nop

080485d0 <__do_global_ctors_aux>:
 80485d0:       55                      push   ebp
 80485d1:       89 e5                   mov    ebp,esp
 80485d3:       53                      push   ebx
 80485d4:       83 ec 04                sub    esp,0x4
 80485d7:       a1 54 96 04 08          mov    eax,ds:0x8049654
 80485dc:       83 f8 ff                cmp    eax,0xffffffff
 80485df:       74 13                   je     80485f4 <__do_global_ctors_aux+0x24>
 80485e1:       bb 54 96 04 08          mov    ebx,0x8049654
 80485e6:       66 90                   xchg   ax,ax
 80485e8:       83 eb 04                sub    ebx,0x4
 80485eb:       ff d0                   call   eax
 80485ed:       8b 03                   mov    eax,DWORD PTR [ebx]
 80485ef:       83 f8 ff                cmp    eax,0xffffffff
 80485f2:       75 f4                   jne    80485e8 <__do_global_ctors_aux+0x18>
 80485f4:       83 c4 04                add    esp,0x4
 80485f7:       5b                      pop    ebx
 80485f8:       5d                      pop    ebp
 80485f9:       c3                      ret
 80485fa:       90                      nop
 80485fb:       90                      nop

Disassembly of section .fini:

080485fc <_fini>:
 80485fc:       55                      push   ebp
 80485fd:       89 e5                   mov    ebp,esp
 80485ff:       53                      push   ebx
 8048600:       83 ec 04                sub    esp,0x4
 8048603:       e8 00 00 00 00          call   8048608 <_fini+0xc>
 8048608:       5b                      pop    ebx
 8048609:       81 c3 34 11 00 00       add    ebx,0x1134
 804860f:       e8 2c fe ff ff          call   8048440 <__do_global_dtors_aux>
 8048614:       59                      pop    ecx
 8048615:       5b                      pop    ebx
 8048616:       c9                      leave
 8048617:       c3                      ret
 