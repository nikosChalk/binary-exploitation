user@protostar:/opt/protostar/bin$ objdump --disassembler-options=intel-mnemonic -d -t format0

format0:     file format elf32-i386

SYMBOL TABLE:
08048114 l    d  .interp        00000000              .interp
08048128 l    d  .note.ABI-tag  00000000              .note.ABI-tag
08048148 l    d  .note.gnu.build-id     00000000              .note.gnu.build-id
0804816c l    d  .hash  00000000              .hash
08048198 l    d  .gnu.hash      00000000              .gnu.hash
080481b8 l    d  .dynsym        00000000              .dynsym
08048218 l    d  .dynstr        00000000              .dynstr
0804826a l    d  .gnu.version   00000000              .gnu.version
08048278 l    d  .gnu.version_r 00000000              .gnu.version_r
08048298 l    d  .rel.dyn       00000000              .rel.dyn
080482a0 l    d  .rel.plt       00000000              .rel.plt
080482c0 l    d  .init  00000000              .init
080482f0 l    d  .plt   00000000              .plt
08048340 l    d  .text  00000000              .text
080484ec l    d  .fini  00000000              .fini
08048508 l    d  .rodata        00000000              .rodata
08048538 l    d  .eh_frame      00000000              .eh_frame
0804953c l    d  .ctors 00000000              .ctors
08049544 l    d  .dtors 00000000              .dtors
0804954c l    d  .jcr   00000000              .jcr
08049550 l    d  .dynamic       00000000              .dynamic
08049620 l    d  .got   00000000              .got
08049624 l    d  .got.plt       00000000              .got.plt
08049640 l    d  .data  00000000              .data
08049648 l    d  .bss   00000000              .bss
00000000 l    d  .stab  00000000              .stab
00000000 l    d  .stabstr       00000000              .stabstr
00000000 l    d  .comment       00000000              .comment
00000000 l    df *ABS*  00000000              crtstuff.c
0804953c l     O .ctors 00000000              __CTOR_LIST__
08049544 l     O .dtors 00000000              __DTOR_LIST__
0804954c l     O .jcr   00000000              __JCR_LIST__
08048370 l     F .text  00000000              __do_global_dtors_aux
08049648 l     O .bss   00000001              completed.5982
0804964c l     O .bss   00000004              dtor_idx.5984
080483d0 l     F .text  00000000              frame_dummy
00000000 l    df *ABS*  00000000              crtstuff.c
08049540 l     O .ctors 00000000              __CTOR_END__
08048538 l     O .eh_frame      00000000              __FRAME_END__
0804954c l     O .jcr   00000000              __JCR_END__
080484c0 l     F .text  00000000              __do_global_ctors_aux
00000000 l    df *ABS*  00000000              format0.c
08049624 l     O .got.plt       00000000              .hidden _GLOBAL_OFFSET_TABLE_
0804953c l       .ctors 00000000              .hidden __init_array_end
0804953c l       .ctors 00000000              .hidden __init_array_start
08049550 l     O .dynamic       00000000              .hidden _DYNAMIC
08049640  w      .data  00000000              data_start
00000000       F *UND*  00000000              sprintf@@GLIBC_2.0
08048450 g     F .text  00000005              __libc_csu_fini
08048340 g     F .text  00000000              _start
00000000  w      *UND*  00000000              __gmon_start__
00000000  w      *UND*  00000000              _Jv_RegisterClasses
08048508 g     O .rodata        00000004              _fp_hw
080484ec g     F .fini  00000000              _fini
00000000       F *UND*  00000000              __libc_start_main@@GLIBC_2.0
0804850c g     O .rodata        00000004              _IO_stdin_used
08049640 g       .data  00000000              __data_start
08049644 g     O .data  00000000              .hidden __dso_handle
08049548 g     O .dtors 00000000              .hidden __DTOR_END__
08048460 g     F .text  0000005a              __libc_csu_init
08049648 g       *ABS*  00000000              __bss_start
080483f4 g     F .text  00000037              vuln
08049650 g       *ABS*  00000000              _end
00000000       F *UND*  00000000              puts@@GLIBC_2.0
08049648 g       *ABS*  00000000              _edata
080484ba g     F .text  00000000              .hidden __i686.get_pc_thunk.bx
0804842b g     F .text  0000001b              main
080482c0 g     F .init  00000000              _init



Disassembly of section .init:

080482c0 <_init>:
 80482c0:       55                      push   ebp
 80482c1:       89 e5                   mov    ebp,esp
 80482c3:       53                      push   ebx
 80482c4:       83 ec 04                sub    esp,0x4
 80482c7:       e8 00 00 00 00          call   80482cc <_init+0xc>
 80482cc:       5b                      pop    ebx
 80482cd:       81 c3 58 13 00 00       add    ebx,0x1358
 80482d3:       8b 93 fc ff ff ff       mov    edx,DWORD PTR [ebx-0x4]
 80482d9:       85 d2                   test   edx,edx
 80482db:       74 05                   je     80482e2 <_init+0x22>
 80482dd:       e8 2e 00 00 00          call   8048310 <__gmon_start__@plt>
 80482e2:       e8 e9 00 00 00          call   80483d0 <frame_dummy>
 80482e7:       e8 d4 01 00 00          call   80484c0 <__do_global_ctors_aux>
 80482ec:       58                      pop    eax
 80482ed:       5b                      pop    ebx
 80482ee:       c9                      leave
 80482ef:       c3                      ret

Disassembly of section .plt:

080482f0 <sprintf@plt-0x10>:
 80482f0:       ff 35 28 96 04 08       push   DWORD PTR ds:0x8049628
 80482f6:       ff 25 2c 96 04 08       jmp    DWORD PTR ds:0x804962c
 80482fc:       00 00                   add    BYTE PTR [eax],al
        ...

08048300 <sprintf@plt>:
 8048300:       ff 25 30 96 04 08       jmp    DWORD PTR ds:0x8049630
 8048306:       68 00 00 00 00          push   0x0
 804830b:       e9 e0 ff ff ff          jmp    80482f0 <_init+0x30>

08048310 <__gmon_start__@plt>:
 8048310:       ff 25 34 96 04 08       jmp    DWORD PTR ds:0x8049634
 8048316:       68 08 00 00 00          push   0x8
 804831b:       e9 d0 ff ff ff          jmp    80482f0 <_init+0x30>

08048320 <__libc_start_main@plt>:
 8048320:       ff 25 38 96 04 08       jmp    DWORD PTR ds:0x8049638
 8048326:       68 10 00 00 00          push   0x10
 804832b:       e9 c0 ff ff ff          jmp    80482f0 <_init+0x30>

08048330 <puts@plt>:
 8048330:       ff 25 3c 96 04 08       jmp    DWORD PTR ds:0x804963c
 8048336:       68 18 00 00 00          push   0x18
 804833b:       e9 b0 ff ff ff          jmp    80482f0 <_init+0x30>

Disassembly of section .text:

08048340 <_start>:
 8048340:       31 ed                   xor    ebp,ebp
 8048342:       5e                      pop    esi
 8048343:       89 e1                   mov    ecx,esp
 8048345:       83 e4 f0                and    esp,0xfffffff0
 8048348:       50                      push   eax
 8048349:       54                      push   esp
 804834a:       52                      push   edx
 804834b:       68 50 84 04 08          push   0x8048450
 8048350:       68 60 84 04 08          push   0x8048460
 8048355:       51                      push   ecx
 8048356:       56                      push   esi
 8048357:       68 2b 84 04 08          push   0x804842b
 804835c:       e8 bf ff ff ff          call   8048320 <__libc_start_main@plt>
 8048361:       f4                      hlt
 8048362:       90                      nop
 8048363:       90                      nop
 8048364:       90                      nop
 8048365:       90                      nop
 8048366:       90                      nop
 8048367:       90                      nop
 8048368:       90                      nop
 8048369:       90                      nop
 804836a:       90                      nop
 804836b:       90                      nop
 804836c:       90                      nop
 804836d:       90                      nop
 804836e:       90                      nop
 804836f:       90                      nop

08048370 <__do_global_dtors_aux>:
 8048370:       55                      push   ebp
 8048371:       89 e5                   mov    ebp,esp
 8048373:       53                      push   ebx
 8048374:       83 ec 04                sub    esp,0x4
 8048377:       80 3d 48 96 04 08 00    cmp    BYTE PTR ds:0x8049648,0x0
 804837e:       75 3f                   jne    80483bf <__do_global_dtors_aux+0x4f>
 8048380:       a1 4c 96 04 08          mov    eax,ds:0x804964c
 8048385:       bb 48 95 04 08          mov    ebx,0x8049548
 804838a:       81 eb 44 95 04 08       sub    ebx,0x8049544
 8048390:       c1 fb 02                sar    ebx,0x2
 8048393:       83 eb 01                sub    ebx,0x1
 8048396:       39 d8                   cmp    eax,ebx
 8048398:       73 1e                   jae    80483b8 <__do_global_dtors_aux+0x48>
 804839a:       8d b6 00 00 00 00       lea    esi,[esi+0x0]
 80483a0:       83 c0 01                add    eax,0x1
 80483a3:       a3 4c 96 04 08          mov    ds:0x804964c,eax
 80483a8:       ff 14 85 44 95 04 08    call   DWORD PTR [eax*4+0x8049544]
 80483af:       a1 4c 96 04 08          mov    eax,ds:0x804964c
 80483b4:       39 d8                   cmp    eax,ebx
 80483b6:       72 e8                   jb     80483a0 <__do_global_dtors_aux+0x30>
 80483b8:       c6 05 48 96 04 08 01    mov    BYTE PTR ds:0x8049648,0x1
 80483bf:       83 c4 04                add    esp,0x4
 80483c2:       5b                      pop    ebx
 80483c3:       5d                      pop    ebp
 80483c4:       c3                      ret
 80483c5:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 80483c9:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

080483d0 <frame_dummy>:
 80483d0:       55                      push   ebp
 80483d1:       89 e5                   mov    ebp,esp
 80483d3:       83 ec 18                sub    esp,0x18
 80483d6:       a1 4c 95 04 08          mov    eax,ds:0x804954c
 80483db:       85 c0                   test   eax,eax
 80483dd:       74 12                   je     80483f1 <frame_dummy+0x21>
 80483df:       b8 00 00 00 00          mov    eax,0x0
 80483e4:       85 c0                   test   eax,eax
 80483e6:       74 09                   je     80483f1 <frame_dummy+0x21>
 80483e8:       c7 04 24 4c 95 04 08    mov    DWORD PTR [esp],0x804954c
 80483ef:       ff d0                   call   eax
 80483f1:       c9                      leave
 80483f2:       c3                      ret
 80483f3:       90                      nop

080483f4 <vuln>:
 80483f4:       55                      push   ebp
 80483f5:       89 e5                   mov    ebp,esp
 80483f7:       83 ec 68                sub    esp,0x68
 80483fa:       c7 45 f4 00 00 00 00    mov    DWORD PTR [ebp-0xc],0x0
 8048401:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 8048404:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 8048408:       8d 45 b4                lea    eax,[ebp-0x4c]
 804840b:       89 04 24                mov    DWORD PTR [esp],eax
 804840e:       e8 ed fe ff ff          call   8048300 <sprintf@plt>
 8048413:       8b 45 f4                mov    eax,DWORD PTR [ebp-0xc]
 8048416:       3d ef be ad de          cmp    eax,0xdeadbeef
 804841b:       75 0c                   jne    8048429 <vuln+0x35>
 804841d:       c7 04 24 10 85 04 08    mov    DWORD PTR [esp],0x8048510
 8048424:       e8 07 ff ff ff          call   8048330 <puts@plt>
 8048429:       c9                      leave
 804842a:       c3                      ret

0804842b <main>:
 804842b:       55                      push   ebp
 804842c:       89 e5                   mov    ebp,esp
 804842e:       83 e4 f0                and    esp,0xfffffff0
 8048431:       83 ec 10                sub    esp,0x10
 8048434:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 8048437:       83 c0 04                add    eax,0x4
 804843a:       8b 00                   mov    eax,DWORD PTR [eax]
 804843c:       89 04 24                mov    DWORD PTR [esp],eax
 804843f:       e8 b0 ff ff ff          call   80483f4 <vuln>
 8048444:       c9                      leave
 8048445:       c3                      ret
 8048446:       90                      nop
 8048447:       90                      nop
 8048448:       90                      nop
 8048449:       90                      nop
 804844a:       90                      nop
 804844b:       90                      nop
 804844c:       90                      nop
 804844d:       90                      nop
 804844e:       90                      nop
 804844f:       90                      nop

08048450 <__libc_csu_fini>:
 8048450:       55                      push   ebp
 8048451:       89 e5                   mov    ebp,esp
 8048453:       5d                      pop    ebp
 8048454:       c3                      ret
 8048455:       8d 74 26 00             lea    esi,[esi+eiz*1+0x0]
 8048459:       8d bc 27 00 00 00 00    lea    edi,[edi+eiz*1+0x0]

08048460 <__libc_csu_init>:
 8048460:       55                      push   ebp
 8048461:       89 e5                   mov    ebp,esp
 8048463:       57                      push   edi
 8048464:       56                      push   esi
 8048465:       53                      push   ebx
 8048466:       e8 4f 00 00 00          call   80484ba <__i686.get_pc_thunk.bx>
 804846b:       81 c3 b9 11 00 00       add    ebx,0x11b9
 8048471:       83 ec 1c                sub    esp,0x1c
 8048474:       e8 47 fe ff ff          call   80482c0 <_init>
 8048479:       8d bb 18 ff ff ff       lea    edi,[ebx-0xe8]
 804847f:       8d 83 18 ff ff ff       lea    eax,[ebx-0xe8]
 8048485:       29 c7                   sub    edi,eax
 8048487:       c1 ff 02                sar    edi,0x2
 804848a:       85 ff                   test   edi,edi
 804848c:       74 24                   je     80484b2 <__libc_csu_init+0x52>
 804848e:       31 f6                   xor    esi,esi
 8048490:       8b 45 10                mov    eax,DWORD PTR [ebp+0x10]
 8048493:       89 44 24 08             mov    DWORD PTR [esp+0x8],eax
 8048497:       8b 45 0c                mov    eax,DWORD PTR [ebp+0xc]
 804849a:       89 44 24 04             mov    DWORD PTR [esp+0x4],eax
 804849e:       8b 45 08                mov    eax,DWORD PTR [ebp+0x8]
 80484a1:       89 04 24                mov    DWORD PTR [esp],eax
 80484a4:       ff 94 b3 18 ff ff ff    call   DWORD PTR [ebx+esi*4-0xe8]
 80484ab:       83 c6 01                add    esi,0x1
 80484ae:       39 fe                   cmp    esi,edi
 80484b0:       72 de                   jb     8048490 <__libc_csu_init+0x30>
 80484b2:       83 c4 1c                add    esp,0x1c
 80484b5:       5b                      pop    ebx
 80484b6:       5e                      pop    esi
 80484b7:       5f                      pop    edi
 80484b8:       5d                      pop    ebp
 80484b9:       c3                      ret

080484ba <__i686.get_pc_thunk.bx>:
 80484ba:       8b 1c 24                mov    ebx,DWORD PTR [esp]
 80484bd:       c3                      ret
 80484be:       90                      nop
 80484bf:       90                      nop

080484c0 <__do_global_ctors_aux>:
 80484c0:       55                      push   ebp
 80484c1:       89 e5                   mov    ebp,esp
 80484c3:       53                      push   ebx
 80484c4:       83 ec 04                sub    esp,0x4
 80484c7:       a1 3c 95 04 08          mov    eax,ds:0x804953c
 80484cc:       83 f8 ff                cmp    eax,0xffffffff
 80484cf:       74 13                   je     80484e4 <__do_global_ctors_aux+0x24>
 80484d1:       bb 3c 95 04 08          mov    ebx,0x804953c
 80484d6:       66 90                   xchg   ax,ax
 80484d8:       83 eb 04                sub    ebx,0x4
 80484db:       ff d0                   call   eax
 80484dd:       8b 03                   mov    eax,DWORD PTR [ebx]
 80484df:       83 f8 ff                cmp    eax,0xffffffff
 80484e2:       75 f4                   jne    80484d8 <__do_global_ctors_aux+0x18>
 80484e4:       83 c4 04                add    esp,0x4
 80484e7:       5b                      pop    ebx
 80484e8:       5d                      pop    ebp
 80484e9:       c3                      ret
 80484ea:       90                      nop
 80484eb:       90                      nop

Disassembly of section .fini:

080484ec <_fini>:
 80484ec:       55                      push   ebp
 80484ed:       89 e5                   mov    ebp,esp
 80484ef:       53                      push   ebx
 80484f0:       83 ec 04                sub    esp,0x4
 80484f3:       e8 00 00 00 00          call   80484f8 <_fini+0xc>
 80484f8:       5b                      pop    ebx
 80484f9:       81 c3 2c 11 00 00       add    ebx,0x112c
 80484ff:       e8 6c fe ff ff          call   8048370 <__do_global_dtors_aux>
 8048504:       59                      pop    ecx
 8048505:       5b                      pop    ebx
 8048506:       c9                      leave
 8048507:       c3                      ret